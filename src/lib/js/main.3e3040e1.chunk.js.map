{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","pcui/events.js","pcui/element/element.js","pcui/pcui.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","pcui/element/element-container.js","pcui/element/element-text-input.js","pcui/element/element-button.js","pcui/element/element-label.js","pcui/helpers/search.js","pcui/element/element-select-input.js","pcui/element/element-boolean-input.js","pcui/element/element-numeric-input.js","pcui/element/element-slider-input.js","pcui/element/element-panel.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_assertThisInitialized","self","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","_createSuper","Derived","result","Super","NewTarget","this","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","Events","_suspendEvents","get","set","EventHandle","owner","name","fn","on","events","_events","undefined","indexOf","push","once","evt","arg0","arg1","arg2","arg3","arg4","arg5","arg6","arg7","unbind","emit","slice","ex","console","info","log","stack","splice","SIMPLE_CSS_PROPERTIES","ELEMENT_REGISTRY","Element","dom","args","_destroyed","_parent","_domEventClick","_onClick","bind","_domEventMouseOver","_onMouseOver","_domEventMouseOut","_onMouseOut","_eventsParent","_dom","document","createElement","id","ui","addEventListener","classList","add","class","Array","isArray","enabled","_hiddenParents","isRoot","hidden","readOnly","ignoreParent","width","height","tabIndex","binding","_flashTimeout","observers","paths","_binding","link","unlink","classAdd","setTimeout","classRemove","hiddenToRoot","destroy","_ignoreParent","_enabled","_onEnabledChange","oldHiddenToRoot","_onHiddenToRootChange","_readOnly","_onReadOnlyChange","cls","contains","remove","parent","parentElement","removeChild","removeEventListener","clearTimeout","oldEnabled","oldReadonly","_onParentDestroy","_onParentDisable","_onParentEnable","_onParentReadOnlyChange","_onParentShowToRoot","_onParentHideToRoot","newEnabled","newReadonly","_hidden","_hasError","style","clientWidth","clientHeight","prevObservers","prevPaths","element","domContent","type","defaultArguments","entry","clsArgs","assign","error","forEach","property","receiver","base","object","hasOwnProperty","desc","getOwnPropertyDescriptor","VALID_RESIZABLE_VALUES","CLASS_DRAGGED","CLASS_CONTAINER","Container","_domEventScroll","_onScroll","scrollable","flex","grid","_domResizeHandle","_domEventResizeStart","_onResizeStart","_domEventResizeMove","_onResizeMove","_domEventResizeEnd","_onResizeEnd","_domEventResizeTouchStart","_onResizeTouchStart","_domEventResizeTouchMove","_onResizeTouchMove","_domEventResizeTouchEnd","_onResizeTouchEnd","_resizeTouchId","_resizeData","_resizeHorizontally","resizable","_resizeMin","_resizeMax","resizeMin","resizeMax","_draggedStartIndex","_getDomFromElement","_domContent","appendChild","_onAppendChild","referenceElement","referenceDom","insertBefore","elementBefore","nextSibling","first","firstChild","_onRemoveChild","index","idx","childNodes","appendBefore","appendAfter","node","innerHTML","handle","passive","preventDefault","stopPropagation","window","_resizeStart","_resizeMove","clientX","clientY","_resizeEnd","changedTouches","touch","identifier","pcui","x","y","offsetX","_resizable","Math","max","min","offsetY","draggedChild","childPanel","_getDraggedChildIndex","_draggedHeight","rect","getBoundingClientRect","dragOut","left","right","top","bottom","childPanelIndex","ind","otherPanel","otherTop","offsetTop","header","rootNode","keys","includes","_buildDomNode","root","children","childNode","childNodeElement","append","builtNode","_flex","_grid","_scrollable","_createResizeHandle","join","TextInput","input","_domInput","_domEvtChange","_onInputChange","_domEvtFocus","_onInputFocus","_domEvtBlur","_onInputBlur","_domEvtKeyDown","_onInputKeyDown","_domEvtKeyUp","_onInputKeyUp","_domEvtCtxMenu","_onInputCtxMenu","_suspendInputChangeEvt","placeholder","renderChanges","blurOnEnter","blurOnEscape","keyChange","onValidate","flash","_updateInputReadOnly","_onValidate","setValue","keyCode","blur","select","setAttribute","removeAttribute","focus","changed","_updateValue","values","different","getAttribute","_keyChange","Button","_unsafe","unsafe","text","size","icon","_domEventKeyDown","_onKeyDown","_text","textContent","_icon","String","fromCodePoint","parseInt","_size","Label","allowTextSelection","nativeTooltip","title","_updateText","searchStringEditDistance","a","b","j","matrix","charAt","searchCharsContains","searchStringTokenize","tokens","parts","replace","split","toLowerCase","trim","_searchItems","items","search","results","item","subFull","Infinity","containsCharsTolerance","editsCandidate","subCandidate","t","edits","editsDistanceTolerance","sub","SelectInput","container","_container","_containerValue","CLASS_SELECT_INPUT","_domShadow","_allowInput","allowInput","_allowCreate","allowCreate","_createFn","createFn","_createLabelText","createLabelText","_labelValue","_onValueClick","_timeoutLabelValueTabIndex","_labelIcon","multiSelect","_input","_lastInputValue","_suspendInputChange","_onFocus","_onBlur","_containerOptions","_containerTags","flexDirection","_domEvtMouseDown","_onMouseDown","_domEvtWindowMouseDown","_onWindowMouseDown","_domEvtWheel","_onWheel","close","_type","_optionsIndex","_labelsIndex","_labelHighlighted","invalidOptions","options","_optionsFn","optionsFn","_allowNull","allowNull","_values","defaultValue","_updateInputFieldsVisibility","label","evtChange","destroyed","_resizeShadow","_onSelectValue","labelCreateText","map","val","_convertSingleValue","toggle","dirty","arr","_onMultipleValuesChange","addValues","_value","_addTag","labelTop","scrollTop","clear","tags","valueCounts","btnRemove","_removeTag","tagElement","removeValues","open","_filterOptions","filter","searchIndex","searchTokens","records","subInd","sort","limitResults","searchItems","option","v","highlighted","forEachChild","_optionValue","_highlightLabel","_options","highlightedLabelDom","previousSibling","focused","showInput","focusInput","requestAnimationFrame","fitHeight","innerHeight","maxHeight","cancelAnimationFrame","_initializeCreateLabel","_onValueChange","_invalidOptions","_convertValue","equals","BooleanInput","CLASS_BOOLEAN_INPUT","_domEventFocus","_domEventBlur","NumericInput","_min","_max","_precision","precision","step","_step","pow","_oldValue","inc","shiftKey","parseFloat","isNaN","toFixed","force","_normalizeValue","forceUpdate","PROXY_FIELDS","SliderInput","inputArgs","field","_combineHistory","_numericInput","_sliderMin","sliderMin","_sliderMax","sliderMax","_domSlider","CLASS_SLIDER","_domBar","_domHandle","_domMouseDown","_domMouseMove","_onMouseMove","_domMouseUp","_onMouseUp","_domTouchStart","_onTouchStart","_domTouchMove","_onTouchMove","_domTouchEnd","_onTouchEnd","_domKeyDown","_touchId","button","_onSlideStart","pageX","_onSlideMove","_onSlideEnd","_updateHandle","historyCombine","Panel","panelArgs","panelType","CLASS_PANEL","_suspendReflow","_initializeHeader","_initializeContent","headerSize","_domEvtDragStart","_onDragStart","_domEvtDragMove","_onDragMove","_domEvtDragEnd","_onDragEnd","_reflowTimeout","_widthBeforeCollapse","_heightBeforeCollapse","collapsible","collapsed","collapseHorizontally","_iconSort","sortable","_btnRemove","removable","_containerContent","_reflow","_containerHeader","_labelTitle","headerText","CLASS_PANEL_HEADER","_onHeaderClick","_collapsible","_collapseHorizontally","disabled","_onChildDragStart","_onChildDragMove","_draggedChild","_onChildDragEnd","_collapsed","_sortable","prepend","_onClickRemove","_headerSize","lineHeight"],"mappings":"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","file":"static/js/main.3e3040e1.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","function Events() {\n    // _world\n    Object.defineProperty(\n        this,\n        '_events', {\n            enumerable: false,\n            configurable: false,\n            writable: true,\n            value: { }\n        }\n    );\n\n    this._suspendEvents = false;\n\n    Object.defineProperty(this, 'suspendEvents', {\n        get: function () {return this._suspendEvents;},\n        set: function (value) {this._suspendEvents = !!value;}\n    });\n}\n\nEvents.prototype.on = function(name, fn) {\n    var events = this._events[name];\n    if (events === undefined) {\n        this._events[name] = [ fn ];\n    } else {\n        if (events.indexOf(fn) == -1)\n            events.push(fn);\n    }\n    return new EventHandle(this, name, fn);\n};\n\nEvents.prototype.once = function(name, fn) {\n    var self = this;\n    var evt = this.on(name, function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        fn.call(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\n        evt.unbind();\n    });\n    return evt;\n};\n\nEvents.prototype.emit = function(name, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n    if (this._suspendEvents) return;\n\n    var events = this._events[name];\n    if (! events)\n        return this;\n\n    events = events.slice(0);\n\n    for(var i = 0; i < events.length; i++) {\n        if (! events[i])\n            continue;\n\n        try {\n            events[i].call(this, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\n        } catch(ex) {\n            console.info('%c%s %c(event error)', 'color: #06f', name, 'color: #f00');\n            console.log(ex.stack);\n        }\n    }\n\n    return this;\n};\n\nEvents.prototype.unbind = function(name, fn) {\n    if (name) {\n        var events = this._events[name];\n        if (! events)\n            return this;\n\n        if (fn) {\n            var i = events.indexOf(fn);\n            if (i !== -1) {\n                if (events.length === 1) {\n                    delete this._events[name];\n                } else {\n                    events.splice(i, 1);\n                }\n            }\n        } else {\n            delete this._events[name];\n        }\n    } else {\n        this._events = { };\n    }\n\n    return this;\n};\n\n\nfunction EventHandle(owner, name, fn) {\n    this.owner = owner;\n    this.name = name;\n    this.fn = fn;\n};\n\nEventHandle.prototype.unbind = function() {\n    if (! this.owner)\n        return;\n\n    this.owner.unbind(this.name, this.fn);\n\n    this.owner = null;\n    this.name = null;\n    this.fn = null;\n};\n\nEventHandle.prototype.call = function() {\n    if (! this.fn)\n        return;\n\n    this.fn.call(this.owner, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);\n};\n\nEventHandle.prototype.on = function(name, fn) {\n    return this.owner.on(name, fn);\n};\n\nexport default Events;","// Object.assign(pcui, (function () {\n//     'use strict';\n\n    import * as pcui from '../pcui';\n    import Events from '../events';\n\n    const CLASS_ELEMENT = 'pcui-element';\n\n    // these are properties that are\n    // available as Element properties and\n    // can also be set through the Element constructor\n    const SIMPLE_CSS_PROPERTIES = [\n        'flexDirection',\n        'flexGrow',\n        'flexBasis',\n        'flexShrink',\n        'flexWrap',\n        'alignItems',\n        'alignSelf',\n        'justifyContent',\n        'justifySelf'\n    ];\n\n    // utility function to expose a CSS property\n    // via an Element.prototype property\n    function exposeCssProperty(name) {\n        Object.defineProperty(Element.prototype, name, {\n            get: function () {\n                return this.style[name];\n            },\n            set: function (value) {\n                this.style[name] = value;\n            }\n        });\n    }\n\n    // Stores Element types by name and default arguments\n    const ELEMENT_REGISTRY = {};\n\n    /**\n     * @event\n     * @name pcui.Element#enable\n     * @description Fired when the Element gets enabled\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#disable\n     * @description Fired when the Element gets disabled\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#hide\n     * @description Fired when the Element gets hidden\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#hideToRoot\n     * @description Fired when the Element or any of its parent get hidden\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#show\n     * @description Fired when the Element stops being hidden\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#showToRoot\n     * @description Fired when the Element and all of its parents become visible\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#readOnly\n     * @param {Boolean} readOnly Whether the Element is now read only\n     * @description Fired when the readOnly property of an Element changes\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#parent\n     * @description Fired when the Element's parent gets set\n     * @param {pcui.Element} parent The new parent\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#click\n     * @description Fired when the mouse is clicked on the Element but only if the Element is enabled.\n     * @param {Event} evt The native mouse event.\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#hover\n     * @description Fired when the mouse starts hovering on the Element\n     * @param {Event} evt The native mouse event.\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#hoverend\n     * @description Fired when the mouse stops hovering on the Element\n     * @param {Event} evt The native mouse event.\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#destroy\n     * @description Fired after the element has been destroyed.\n     * @param {HTMLElement} dom The DOM element\n     * @param {pcui.Element} element The element\n     */\n\n    /**\n     * @event\n     * @name pcui.Element#hoverend\n     * @description Fired when the mouse stops hovering on the Element\n     * @param {Event} evt The native mouse event.\n     */\n\n    /**\n     * @name pcui.Element\n     * @classdesc The base class for all UI elements.\n     * @extends Events\n     * @property {Boolean} enabled Gets / sets whether the Element or its parent chain is enabled or not. Defaults to true.\n     * @property {HTMLElement} dom Gets the root DOM node for this Element.\n     * @property {pcui.Element} parent Gets the parent Element.\n     * @property {Boolean} hidden Gets / sets whether the Element is hidden.\n     * @property {Boolean} hiddenToRoot Gets whether the Element is hidden all the way up to the root. If the Element itself or any of its parents are hidden then this is true.\n     * @property {Boolean} readOnly Gets / sets whether the Element is read only.\n     * @property {Boolean} ignoreParent Gets / sets whether the Element will ignore parent events & variable states.\n     * @property {Number} width Gets / sets the width of the Element in pixels. Can also be an empty string to remove it.\n     * @property {Number} height Gets / sets the height of the Element in pixels. Can also be an empty string to remove it.\n     * @property {Number} tabIndex Gets / sets the tabIndex of the Element.\n     * @property {Boolean} error Gets / sets whether the Element is in an error state.\n     * @property {pcui.BindingBase} binding Gets / sets the Binding object for the element.\n     * @property {CSSStyleDeclaration} style Shortcut to pcui.Element.dom.style.\n     * @property {DOMTokenList} class Shortcut to pcui.Element.dom.classList.\n     */\n    class Element extends Events {\n        /**\n         * Creates a new Element.\n         * @param {HTMLElement} dom The DOM element that this pcui.Element wraps.\n         * @param {Object} args The arguments. All settable properties can also be set through the constructor.\n         * @param {String} [args.id] The desired id for the Element HTML node.\n         * @param {String|String[]} [args.class] The CSS class or classes we want to add to the element.\n         * @param {Boolean} [args.isRoot] If true then this is the root element. Set this to true for the topmost Element in your page.\n         */\n        constructor(dom, args) {\n            super();\n\n            if (!args) args = {};\n\n            this._destroyed = false;\n            this._parent = null;\n\n            this._domEventClick = this._onClick.bind(this);\n            this._domEventMouseOver = this._onMouseOver.bind(this);\n            this._domEventMouseOut = this._onMouseOut.bind(this);\n            this._eventsParent = [];\n\n            this._dom = dom || document.createElement('div');\n\n            if (args.id !== undefined) {\n                this._dom.id = args.id;\n            }\n\n            // add ui reference\n            this._dom.ui = this;\n\n            // add event listeners\n            this._dom.addEventListener('click', this._domEventClick);\n            this._dom.addEventListener('mouseover', this._domEventMouseOver);\n            this._dom.addEventListener('mouseout', this._domEventMouseOut);\n\n            // add element class\n            this._dom.classList.add(CLASS_ELEMENT);\n\n            // add user classes\n            if (args.class) {\n                if (Array.isArray(args.class)) {\n                    for (let i = 0; i < args.class.length; i++) {\n                        this._dom.classList.add(args.class[i]);\n                    }\n                } else {\n                    this._dom.classList.add(args.class);\n                }\n            }\n\n            this.enabled = args.enabled !== undefined ? args.enabled : true;\n            this._hiddenParents = !args.isRoot;\n            this.hidden = args.hidden || false;\n            this.readOnly = args.readOnly || false;\n            this.ignoreParent = args.ignoreParent || false;\n\n            if (args.width !== undefined) {\n                this.width = args.width;\n            }\n            if (args.height !== undefined) {\n                this.height = args.height;\n            }\n            if (args.tabIndex !== undefined) {\n                this.tabIndex = args.tabIndex;\n            }\n\n            // copy CSS properties from args\n            for (const key in args) {\n                if (args[key] === undefined) continue;\n                if (SIMPLE_CSS_PROPERTIES.indexOf(key) !== -1) {\n                    this[key] = args[key];\n                }\n            }\n\n            // set the binding object\n            if (args.binding) {\n                this.binding = args.binding;\n            }\n\n            this._flashTimeout = null;\n        }\n\n        /**\n         * @name pcui.Element#link\n         * @description Links the specified observers and paths to the Element's data binding.\n         * @param {Observer|Observer[]} observers An array of observers or a single observer.\n         * @param {String|String[]} paths A path for the observer(s) or an array of paths that maps to each separate observer.\n         */\n        link(observers, paths) {\n            this._binding.link(observers, paths);\n        }\n\n\n        /**\n         * @name pcui.Element#unlink\n         * @description Unlinks the Element from its observers\n         */\n        unlink() {\n            if (this._binding) {\n                this._binding.unlink();\n            }\n        }\n\n        /**\n         * @name pcui.Element#flash\n         * @description Triggers a flash animation on the Element.\n         */\n        flash() {\n            if (this._flashTimeout) return;\n\n            this.classAdd(pcui.CLASS_FLASH);\n            this._flashTimeout = setTimeout(function () {\n                this._flashTimeout = null;\n                this.classRemove(pcui.CLASS_FLASH);\n            }.bind(this), 200);\n        }\n\n        _onClick(evt) {\n            if (this.enabled) {\n                this.emit('click', evt);\n            }\n        }\n\n        _onMouseOver(evt) {\n            this.emit('hover', evt);\n        }\n\n        _onMouseOut(evt) {\n            this.emit('hoverend', evt);\n        }\n\n        _onHiddenToRootChange(hiddenToRoot) {\n            if (hiddenToRoot) {\n                this.emit('hideToRoot');\n            } else {\n                this.emit('showToRoot');\n            }\n        }\n\n        _onEnabledChange(enabled) {\n            if (enabled) {\n                this.classRemove(pcui.CLASS_DISABLED);\n            } else {\n                this.classAdd(pcui.CLASS_DISABLED);\n            }\n\n            this.emit(enabled ? 'enable' : 'disable');\n        }\n\n        _onParentDestroy() {\n            this.destroy();\n        }\n\n        _onParentDisable() {\n            if (this._ignoreParent) return;\n            if (this._enabled) {\n                this._onEnabledChange(false);\n            }\n        }\n\n        _onParentEnable() {\n            if (this._ignoreParent) return;\n            if (this._enabled) {\n                this._onEnabledChange(true);\n            }\n        }\n\n        _onParentShowToRoot() {\n            const oldHiddenToRoot = this.hiddenToRoot;\n            this._hiddenParents = false;\n            if (oldHiddenToRoot !== this.hiddenToRoot) {\n                this._onHiddenToRootChange(this.hiddenToRoot);\n            }\n        }\n\n        _onParentHideToRoot() {\n            const oldHiddenToRoot = this.hiddenToRoot;\n            this._hiddenParents = true;\n            if (oldHiddenToRoot !== this.hiddenToRoot) {\n                this._onHiddenToRootChange(this.hiddenToRoot);\n            }\n        }\n\n        _onReadOnlyChange(readOnly) {\n            if (readOnly) {\n                this.classAdd(pcui.CLASS_READONLY);\n            } else {\n                this.classRemove(pcui.CLASS_READONLY);\n            }\n\n            this.emit('readOnly', readOnly);\n        }\n\n        _onParentReadOnlyChange(readOnly) {\n            if (this._ignoreParent) return;\n            if (readOnly) {\n                if (!this._readOnly) {\n                    this._onReadOnlyChange(true);\n                }\n            } else {\n                if (!this._readOnly) {\n                    this._onReadOnlyChange(false);\n                }\n            }\n\n        }\n\n        /**\n         * @name pcui.Element#classAdd\n         * @description Adds the specified class to the DOM element but checks if the classList contains it first.\n         * @param {String} cls The class to add\n         */\n        classAdd(cls) {\n            var classList = this._dom.classList;\n            if (!classList.contains(cls)) {\n                classList.add(cls);\n            }\n        }\n\n        /**\n         * @name pcui.Element#classRemove\n         * @description Removes the specified class from the DOM element but checks if the classList contains it first.\n         * @param {String} cls The class to remove\n         */\n        classRemove(cls) {\n            var classList = this._dom.classList;\n            if (classList.contains(cls)) {\n                classList.remove(cls);\n            }\n        }\n\n        /**\n         * @name pcui.Element#destroy\n         * @description Destroys the Element and its events.\n         */\n        destroy() {\n            if (this._destroyed) return;\n\n            this._destroyed = true;\n\n            if (this.binding) {\n                this.binding = null;\n            } else {\n                this.unlink();\n            }\n\n            if (this.parent) {\n                const parent = this.parent;\n\n                for (let i = 0; i < this._eventsParent.length; i++) {\n                    this._eventsParent[i].unbind();\n                }\n                this._eventsParent.length = 0;\n\n\n                // remove element from parent\n                // check if parent has been destroyed already\n                // because we do not want to be emitting events\n                // on a destroyed parent after it's been destroyed\n                // as it is easy to lead to null exceptions\n                if (parent.remove && !parent._destroyed) {\n                    parent.remove(this);\n                }\n\n                // set parent to null and remove from\n                // parent dom just in case parent.remove above\n                // didn't work because of an override or other condition\n                this._parent = null;\n\n                if (this._dom && this._dom.parentElement) {\n                    this._dom.parentElement.removeChild(this._dom);\n                }\n\n            }\n\n            const dom = this._dom;\n            if (dom) {\n                // remove event listeners\n                dom.removeEventListener('click', this._domEventClick);\n                dom.removeEventListener('mouseover', this._domEventMouseOver);\n                dom.removeEventListener('mouseout', this._domEventMouseOut);\n\n                // remove ui reference\n                delete dom.ui;\n\n                this._dom = null;\n            }\n\n            this._domEventClick = null;\n            this._domEventMouseOver = null;\n            this._domEventMouseOut = null;\n\n            if (this._flashTimeout) {\n                clearTimeout(this._flashTimeout);\n            }\n\n            this.emit('destroy', dom, this);\n\n            this.unbind();\n        }\n\n        /**\n         * @static\n         * Registers a new Element type\n         * @param {String} type The type we want to reference this Element by\n         * @param {Object} cls The actual class of the Element\n         * @param {Object} [defaultArguments] Default arguments when creating this type\n         */\n        static register(type, cls, defaultArguments) {\n            ELEMENT_REGISTRY[type] = { cls, defaultArguments };\n        }\n\n        /**\n         * @static\n         * Unregisters the specified Element type\n         * @param {String} type The type we want to unregister\n         */\n        static unregister(type) {\n            delete ELEMENT_REGISTRY[type];\n        }\n\n        /**\n         * @static\n         * Creates a new Element by type\n         * @param {String} type The type of the Element (registered by pcui.Element#register)\n         * @param {Object} args Arguments for the Element\n         * @returns {pcui.Element} A new pcui.Element of the desired type\n         */\n        static create(type, args) {\n            const entry = ELEMENT_REGISTRY[type];\n            if (!entry) {\n                console.error('Invalid type passed to pcui.Element#create', type);\n                return;\n            }\n\n            const cls = entry.cls;\n            const clsArgs = {};\n\n            if (entry.defaultArguments) {\n                Object.assign(clsArgs, entry.defaultArguments);\n            }\n            if (args) {\n                Object.assign(clsArgs, args);\n            }\n\n            return new cls(clsArgs);\n        }\n\n        get enabled() {\n            if (this._ignoreParent) return this._enabled;\n            return this._enabled && (!this._parent || this._parent.enabled);\n        }\n\n        set enabled(value) {\n            if (this._enabled === value) return;\n\n            // remember if enabled in hierarchy\n            const enabled = this.enabled;\n\n            this._enabled = value;\n\n            // only fire event if hierarchy state changed\n            if (enabled !== value) {\n                this._onEnabledChange(value);\n            }\n        }\n\n        get ignoreParent() {\n            return this._ignoreParent;\n        }\n\n        set ignoreParent(value) {\n            this._ignoreParent = value;\n            this._onEnabledChange(this.enabled);\n            this._onReadOnlyChange(this.readOnly);\n        }\n\n        get dom() {\n            return this._dom;\n        }\n\n        get parent() {\n            return this._parent;\n        }\n\n        set parent(value) {\n            if (value === this._parent) return;\n\n            const oldEnabled = this.enabled;\n            const oldReadonly = this.readOnly;\n            const oldHiddenToRoot = this.hiddenToRoot;\n\n            if (this._parent) {\n                for (let i = 0; i < this._eventsParent.length; i++) {\n                    this._eventsParent[i].unbind();\n                }\n                this._eventsParent.length = 0;\n            }\n\n            this._parent = value;\n\n            if (this._parent) {\n                this._eventsParent.push(this._parent.once('destroy', this._onParentDestroy.bind(this)));\n                this._eventsParent.push(this._parent.on('disable', this._onParentDisable.bind(this)));\n                this._eventsParent.push(this._parent.on('enable', this._onParentEnable.bind(this)));\n                this._eventsParent.push(this._parent.on('readOnly', this._onParentReadOnlyChange.bind(this)));\n                this._eventsParent.push(this._parent.on('showToRoot', this._onParentShowToRoot.bind(this)));\n                this._eventsParent.push(this._parent.on('hideToRoot', this._onParentHideToRoot.bind(this)));\n\n                this._hiddenParents = this._parent.hiddenToRoot;\n            } else {\n                this._hiddenParents = true;\n            }\n\n            this.emit('parent', this._parent);\n\n            const newEnabled = this.enabled;\n            if (newEnabled !== oldEnabled) {\n                this._onEnabledChange(newEnabled);\n            }\n\n            const newReadonly = this.readOnly;\n            if (newReadonly !== oldReadonly) {\n                this._onReadOnlyChange(newReadonly);\n            }\n\n            const hiddenToRoot = this.hiddenToRoot;\n            if (hiddenToRoot !== oldHiddenToRoot) {\n                this._onHiddenToRootChange(hiddenToRoot);\n            }\n        }\n\n        get hidden() {\n            return this._hidden;\n        }\n\n        set hidden(value) {\n            if (value === this._hidden) return;\n\n            const oldHiddenToRoot = this.hiddenToRoot;\n\n            this._hidden = value;\n\n            if (value) {\n                this.classAdd(pcui.CLASS_HIDDEN);\n            } else {\n                this.classRemove(pcui.CLASS_HIDDEN);\n            }\n\n            this.emit(value ? 'hide' : 'show');\n\n            if (this.hiddenToRoot !== oldHiddenToRoot) {\n                this._onHiddenToRootChange(this.hiddenToRoot);\n            }\n        }\n\n        get hiddenToRoot() {\n            return this._hidden || this._hiddenParents;\n        }\n\n        get readOnly() {\n            if (this._ignoreParent) return this._readOnly;\n            return this._readOnly || !!(this._parent && this._parent.readOnly);\n        }\n\n        set readOnly(value) {\n            if (this._readOnly === value) return;\n            this._readOnly = value;\n\n            this._onReadOnlyChange(value);\n        }\n\n        get error() {\n            return this._hasError;\n        }\n\n        set error(value) {\n            if (this._hasError === value) return;\n            this._hasError = value;\n            if (value) {\n                this.classAdd(pcui.CLASS_ERROR);\n            } else {\n                this.classRemove(pcui.CLASS_ERROR);\n            }\n        }\n\n        get style() {\n            return this._dom.style;\n        }\n\n        get class() {\n            return this._dom.classList;\n        }\n\n        get width() {\n            return this._dom.clientWidth;\n        }\n\n        set width(value) {\n            if (typeof value === 'number') {\n                value += 'px';\n            }\n            this.style.width = value;\n        }\n\n        get height() {\n            return this._dom.clientHeight;\n        }\n\n        set height(value) {\n            if (typeof value === 'number') {\n                value += 'px';\n            }\n            this.style.height = value;\n        }\n\n        get tabIndex() {\n            return this._dom.tabIndex;\n        }\n\n        set tabIndex(value) {\n            this._dom.tabIndex = value;\n        }\n\n        get binding() {\n            return this._binding;\n        }\n\n        set binding(value) {\n            if (this._binding === value) return;\n\n            let prevObservers;\n            let prevPaths;\n\n            if (this._binding) {\n                prevObservers = this._binding.observers;\n                prevPaths = this._binding.paths;\n\n                this.unlink();\n                this._binding.element = null;\n                this._binding = null;\n            }\n\n            this._binding = value;\n\n            if (this._binding) {\n                this._binding.element = this;\n                if (prevObservers && prevPaths) {\n                    this.link(prevObservers, prevPaths);\n                }\n            }\n        }\n\n        get destroyed() {\n            return this._destroyed;\n        }\n\n        /*  Backwards Compatibility */\n        // we should remove those after we migrate\n        get disabled() {\n            return !this.enabled;\n        }\n\n        set disabled(value) {\n            this.enabled = !value;\n        }\n\n        get element() {\n            return this.dom;\n        }\n\n        set element(value) {\n            this.dom = value;\n        }\n\n        get innerElement() {\n            return this.domContent;\n        }\n\n        set innerElement(value) {\n            this.domContent = value;\n        }\n    }\n\n    // expose rest of CSS properties\n    SIMPLE_CSS_PROPERTIES.forEach(exposeCssProperty);\n\n    export { Element };\n    export default Element;\n//     return {\n//         Element: Element\n//     };\n// })());\n","// window.pcui = {};\n\n// constants\n// Object.assign(window.pcui, {\n//     CLASS_FLEX: 'pcui-flex',\n//     CLASS_GRID: 'pcui-grid',\n//     CLASS_HIDDEN: 'pcui-hidden',\n//     CLASS_SCROLLABLE: 'pcui-scrollable',\n//     CLASS_RESIZABLE: 'pcui-resizable',\n//     CLASS_READONLY: 'pcui-readonly',\n//     CLASS_DISABLED: 'pcui-disabled',\n//     CLASS_COLLAPSIBLE: 'pcui-collapsible',\n//     CLASS_COLLAPSED: 'pcui-collapsed',\n//     CLASS_FOCUS: 'pcui-focus',\n//     CLASS_MULTIPLE_VALUES: 'pcui-multiple-values',\n//     CLASS_ERROR: 'pcui-error',\n//     CLASS_FLASH: 'flash',\n//     CLASS_NOT_FLEXIBLE: 'pcui-not-flexible',\n//     CLASS_DEFAULT_MOUSEDOWN: 'pcui-default-mousedown'\n// });\n\nvar CLASS_FLEX = 'pcui-flex';\nvar CLASS_GRID = 'pcui-grid';\nvar CLASS_HIDDEN = 'pcui-hidden';\nvar CLASS_SCROLLABLE = 'pcui-scrollable';\nvar CLASS_RESIZABLE = 'pcui-resizable';\nvar CLASS_READONLY = 'pcui-readonly';\nvar CLASS_DISABLED = 'pcui-disabled';\nvar CLASS_COLLAPSIBLE = 'pcui-collapsible';\nvar CLASS_COLLAPSED = 'pcui-collapsed';\nvar CLASS_FOCUS = 'pcui-focus';\nvar CLASS_MULTIPLE_VALUES = 'pcui-multiple-values';\nvar CLASS_ERROR = 'pcui-error';\nvar CLASS_FLASH = 'flash';\nvar CLASS_NOT_FLEXIBLE = 'pcui-not-flexible';\nvar CLASS_DEFAULT_MOUSEDOWN = 'pcui-default-mousedown';\n\nexport {\n    CLASS_FLEX,\n    CLASS_GRID,\n    CLASS_HIDDEN,\n    CLASS_SCROLLABLE,\n    CLASS_RESIZABLE,\n    CLASS_READONLY,\n    CLASS_DISABLED,\n    CLASS_COLLAPSIBLE,\n    CLASS_COLLAPSED,\n    CLASS_FOCUS,\n    CLASS_MULTIPLE_VALUES,\n    CLASS_ERROR,\n    CLASS_FLASH,\n    CLASS_NOT_FLEXIBLE,\n    CLASS_DEFAULT_MOUSEDOWN\n}\n","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","// Object.assign(pcui, (function () {\n//     'use strict';\n    import Element from './element'; \n    import * as pcui from '../pcui';\n\n    const RESIZE_HANDLE_SIZE = 4;\n\n    const VALID_RESIZABLE_VALUES = [\n        null,\n        'top',\n        'right',\n        'bottom',\n        'left'\n    ];\n\n    const CLASS_RESIZING = pcui.CLASS_RESIZABLE + '-resizing';\n    const CLASS_RESIZABLE_HANDLE = 'pcui-resizable-handle';\n    const CLASS_CONTAINER = 'pcui-container';\n\n    const CLASS_DRAGGED = CLASS_CONTAINER + '-dragged';\n    const CLASS_DRAGGED_CHILD = CLASS_DRAGGED + '-child';\n\n    /**\n     * @event\n     * @name pcui.Container#append\n     * @description Fired when a child Element gets added to the Container\n     * @param {pcui.Element} element The element that was added\n     */\n\n    /**\n     * @event\n     * @name pcui.Container#remove\n     * @description Fired when a child Element gets removed from the Container\n     * @param {pcui.Element} element The element that was removed\n     */\n\n    /**\n     * @event\n     * @name pcui.Container#scroll\n     * @description Fired when the container is scrolled.\n     * @param {Event} evt The native scroll event.\n     */\n\n    /**\n     * @event\n     * @name pcui.Container#resize\n     * @description Fired when the container gets resized using the resize handle.\n     */\n\n    /**\n     * @name pcui.Container\n     * @classdesc A container is the basic building block for Elements that are grouped together.\n     * A container can contain any other element including other containers.\n     * @property {Boolean} flex Gets / sets whether the container supports the flex layout. Cannot coexist with grid.\n     * @property {Boolean} grid Gets / sets whether the container supports the grid layout. Cannot coexist with flex.\n     * @property {Number} resizeMin Gets / sets the minimum size the Container can take when resized in pixels.\n     * @property {Number} resizeMax Gets / sets the maximum size the Container can take when resized in pixels.\n     * @property {Boolean} scrollable Gets / sets whether the container should be scrollable. Defaults to false.\n     * @property {String} resizable Gets / sets whether the Container is resizable and where the resize handle is located. Can\n     * be one of 'top', 'bottom', 'right', 'left'. Set to null to disable resizing.\n     * @extends pcui.Element\n     * @mixes pcui.IContainer\n     * @mixes pcui.IFlex\n     * @mixes pcui.IGrid\n     * @mixes pcui.IScrollable\n     * @mixes pcui.IResizable\n     */\n    class Container extends Element {\n        /**\n         * Creates a new Container.\n         * @param {Object} args The arguments. Extends the pcui.Element constructor arguments. All settable properties can also be set through the constructor.\n         * @param {HTMLElement} [args.dom] The DOM element to use for the container. If unspecified a new element will be created.\n         */\n        constructor(args) {\n            if (!args) args = {};\n\n            const dom = args.dom || document.createElement('div');\n\n            super(dom, args);\n\n            this.class.add(CLASS_CONTAINER);\n\n            this._domEventScroll = this._onScroll.bind(this);\n            this.domContent = this._dom;\n\n            // scroll\n            this.scrollable = args.scrollable !== undefined ? args.scrollable : false;\n\n            // flex\n            this.flex = !!args.flex;\n\n            // grid\n            let grid = !!args.grid;\n            if (grid) {\n                if (this.flex) {\n                    console.error('Invalid pcui.Container arguments: \"grid\" and \"flex\" cannot both be true.');\n                    grid = false;\n                }\n            }\n            this.grid = grid;\n\n            // resize related\n            this._domResizeHandle = null;\n            this._domEventResizeStart = this._onResizeStart.bind(this);\n            this._domEventResizeMove = this._onResizeMove.bind(this);\n            this._domEventResizeEnd = this._onResizeEnd.bind(this);\n            this._domEventResizeTouchStart = this._onResizeTouchStart.bind(this);\n            this._domEventResizeTouchMove = this._onResizeTouchMove.bind(this);\n            this._domEventResizeTouchEnd = this._onResizeTouchEnd.bind(this);\n            this._resizeTouchId = null;\n            this._resizeData = null;\n            this._resizeHorizontally = true;\n\n            this.resizable = args.resizable || null;\n            this._resizeMin = 100;\n            this._resizeMax = 300;\n\n            if (args.resizeMin !== undefined) {\n                this.resizeMin = args.resizeMin;\n            }\n            if (args.resizeMax !== undefined) {\n                this.resizeMax = args.resizeMax;\n            }\n\n            this._draggedStartIndex = -1;\n        }\n\n        /**\n         * @name pcui.Container#append\n         * @description Appends an element to the container.\n         * @param {pcui.Element} element The element to append.\n         * @fires 'append'\n         */\n        append(element) {\n            const dom = this._getDomFromElement(element);\n            this._domContent.appendChild(dom);\n            this._onAppendChild(element);\n        }\n\n        /**\n         * @name pcui.Container#appendBefore\n         * @description Appends an element to the container before the specified reference element.\n         * @param {pcui.Element} element The element to append.\n         * @param {pcui.Element} referenceElement The element before which the element will be appended.\n         * @fires 'append'\n         */\n        appendBefore(element, referenceElement) {\n            const dom = this._getDomFromElement(element);\n            this._domContent.appendChild(dom);\n            const referenceDom =  referenceElement && this._getDomFromElement(referenceElement);\n\n            this._domContent.insertBefore(dom, referenceDom);\n\n            this._onAppendChild(element);\n        }\n\n        /**\n         * @name pcui.Container#appendAfter\n         * @description Appends an element to the container just after the specified reference element.\n         * @param {pcui.Element} element The element to append.\n         * @param {pcui.Element} referenceElement The element after which the element will be appended.\n         * @fires 'append'\n         */\n        appendAfter(element, referenceElement) {\n            const dom = this._getDomFromElement(element);\n            const referenceDom = referenceElement && this._getDomFromElement(referenceElement);\n\n            const elementBefore = referenceDom ? referenceDom.nextSibling : null;\n            if (elementBefore) {\n                this._domContent.insertBefore(dom, elementBefore);\n            } else {\n                this._domContent.appendChild(dom);\n            }\n\n            this._onAppendChild(element);\n        }\n\n        /**\n         * @name pcui.Container#prepend\n         * @description Inserts an element in the beginning of the container.\n         * @param {pcui.Element} element The element to prepend.\n         * @fires 'append'\n         */\n        prepend(element) {\n            const dom = this._getDomFromElement(element);\n            const first = this._domContent.firstChild;\n            if (first) {\n                this._domContent.insertBefore(dom, first);\n            } else {\n                this._domContent.appendChild(dom);\n            }\n\n            this._onAppendChild(element);\n        }\n\n        /**\n         * @name pcui.Container#remove\n         * @description Removes the specified child element from the container.\n         * @param {pcui.Element} element The element to remove.\n         * @fires 'remove'\n         */\n        remove(element) {\n            if (element.parent !== this) return;\n\n            const dom = this._getDomFromElement(element);\n            this._domContent.removeChild(dom);\n\n            this._onRemoveChild(element);\n        }\n\n        /**\n         * @name pcui.Container#move\n         * @description Moves the specified child at the specified index.\n         * @param {pcui.Element} element The element to move.\n         * @param {Number} index The index\n         */\n        move(element, index) {\n            let idx = -1;\n            for (let i = 0; i < this.dom.childNodes.length; i++) {\n                if (this.dom.childNodes[i].ui === element) {\n                    idx = i;\n                    break;\n                }\n            }\n\n            if (idx === -1) {\n                this.appendBefore(element, this.dom.childNodes[index]);\n            } else if (index !== idx) {\n                this.remove(element);\n                if (index < idx) {\n                    this.appendBefore(element, this.dom.childNodes[index]);\n                } else {\n                    this.appendAfter(element, this.dom.childNodes[index - 1]);\n                }\n            }\n        }\n\n        /**\n         * @name pcui.Container#clear\n         * @description Clears all children from the container.\n         * @fires 'remove' for each child element.\n         */\n        clear() {\n            let i = this._domContent.childNodes.length;\n            while (i--) {\n                const node = this._domContent.childNodes[i];\n                if (node.ui) {\n                    node.ui.destroy();\n                }\n            }\n\n            this._domContent.innerHTML = '';\n        }\n\n        // Used for backwards compatibility with the legacy ui framework\n        _getDomFromElement(element) {\n            if (element.dom) {\n                return element.dom;\n            }\n\n            if (element.element) {\n                // console.log('Legacy ui.Element passed to pcui.Container', this.class, element.class);\n                return element.element;\n            }\n\n            return element;\n        }\n\n        _onAppendChild(element) {\n            element.parent = this;\n            this.emit('append', element);\n        }\n\n        _onRemoveChild(element) {\n            element.parent = null;\n            this.emit('remove', element);\n        }\n\n        _onScroll(evt) {\n            this.emit('scroll', evt);\n        }\n\n        _createResizeHandle() {\n            const handle = document.createElement('div');\n            handle.classList.add(CLASS_RESIZABLE_HANDLE);\n            handle.ui = this;\n\n            handle.addEventListener('mousedown', this._domEventResizeStart);\n            handle.addEventListener('touchstart', this._domEventResizeTouchStart, { passive: false });\n\n            this._domResizeHandle = handle;\n        }\n\n        _onResizeStart(evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n\n            window.addEventListener('mousemove', this._domEventResizeMove);\n            window.addEventListener('mouseup', this._domEventResizeEnd);\n\n            this._resizeStart();\n        }\n\n        _onResizeMove(evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n\n            this._resizeMove(evt.clientX, evt.clientY);\n        }\n\n        _onResizeEnd(evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n\n            window.removeEventListener('mousemove', this._domEventResizeMove);\n            window.removeEventListener('mouseup', this._domEventResizeEnd);\n\n            this._resizeEnd();\n        }\n\n        _onResizeTouchStart(evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n\n            for (let i = 0; i < evt.changedTouches.length; i++) {\n                const touch = evt.changedTouches[i];\n                if (touch.target === this._domResizeHandle) {\n                    this._resizeTouchId = touch.identifier;\n                }\n            }\n\n            window.addEventListener('touchmove', this._domEventResizeTouchMove);\n            window.addEventListener('touchend', this._domEventResizeTouchEnd);\n\n            this._resizeStart();\n        }\n\n        _onResizeTouchMove(evt) {\n            for (let i = 0; i < evt.changedTouches.length; i++) {\n                const touch = evt.changedTouches[i];\n                if (touch.identifier !== this._resizeTouchId) {\n                    continue;\n                }\n\n                evt.stopPropagation();\n                evt.preventDefault();\n\n                this._resizeMove(touch.clientX, touch.clientY);\n\n                break;\n            }\n        }\n\n        _onResizeTouchEnd(evt) {\n            for (let i = 0; i < evt.changedTouches.length; i++) {\n                const touch = evt.changedTouches[i];\n                if (touch.identifier === this._resizeTouchId) {\n                    continue;\n                }\n\n                this._resizeTouchId = null;\n\n                evt.preventDefault();\n                evt.stopPropagation();\n\n                window.removeEventListener('touchmove', this._domEventResizeTouchMove);\n                window.removeEventListener('touchend', this._domEventResizeTouchEnd);\n\n                this._resizeEnd();\n\n                break;\n            }\n        }\n\n        _resizeStart() {\n            this.class.add(CLASS_RESIZING);\n        }\n\n        _resizeMove(x, y) {\n            // if we haven't initialized resizeData do so now\n            if (!this._resizeData) {\n                this._resizeData = {\n                    x: x,\n                    y: y,\n                    width: this.dom.clientWidth,\n                    height: this.dom.clientHeight\n                };\n\n                return;\n            }\n\n            if (this._resizeHorizontally) {\n                // horizontal resizing\n                let offsetX = this._resizeData.x - x;\n\n                if (this._resizable === 'right') {\n                    offsetX = -offsetX;\n                }\n\n                this.width = RESIZE_HANDLE_SIZE + Math.max(this._resizeMin, Math.min(this._resizeMax, (this._resizeData.width + offsetX)));\n            } else {\n                // vertical resizing\n                let offsetY = this._resizeData.y - y;\n\n                if (this._resizable === 'bottom') {\n                    offsetY = -offsetY;\n                }\n\n                this.height = Math.max(this._resizeMin, Math.min(this._resizeMax, (this._resizeData.height + offsetY)));\n            }\n\n            this.emit('resize');\n        }\n\n        _resizeEnd() {\n            this._resizeData = null;\n            this.class.remove(CLASS_RESIZING);\n        }\n\n        /**\n         * Resize the container\n         * @param {Number} x The amount of pixels to resize the width\n         * @param {Number} y The amount of pixels to resize the height\n         */\n        resize(x, y) {\n            x = x || 0;\n            y = y || 0;\n\n            this._resizeStart();\n            this._resizeMove(0, 0);\n            this._resizeMove(-x + RESIZE_HANDLE_SIZE, -y);\n            this._resizeEnd();\n        }\n\n        _getDraggedChildIndex(draggedChild) {\n            for (let i = 0; i < this.dom.childNodes.length; i++) {\n                if (this.dom.childNodes[i].ui === draggedChild) {\n                    return i;\n                }\n            }\n\n            return -1;\n        }\n\n        _onChildDragStart(evt, childPanel) {\n            this.class.add(CLASS_DRAGGED_CHILD);\n\n            this._draggedStartIndex = this._getDraggedChildIndex(childPanel);\n\n            childPanel.class.add(CLASS_DRAGGED);\n\n            this._draggedHeight = childPanel.height;\n\n            this.emit('child:dragstart', childPanel, this._draggedStartIndex);\n        }\n\n        _onChildDragMove(evt, childPanel) {\n            const rect = this.dom.getBoundingClientRect();\n\n            const dragOut = (evt.clientX < rect.left || evt.clientX > rect.right || evt.clientY < rect.top || evt.clientY > rect.bottom);\n\n            const childPanelIndex = this._getDraggedChildIndex(childPanel);\n\n            if (dragOut) {\n                childPanel.class.remove(CLASS_DRAGGED);\n                if (this._draggedStartIndex !== childPanelIndex) {\n                    this.remove(childPanel);\n                    if (this._draggedStartIndex < childPanelIndex) {\n                        this.appendBefore(childPanel, this.dom.childNodes[this._draggedStartIndex]);\n                    } else {\n                        this.appendAfter(childPanel, this.dom.childNodes[this._draggedStartIndex - 1]);\n                    }\n                }\n\n                return;\n            }\n\n            childPanel.class.add(CLASS_DRAGGED);\n\n            const y = evt.clientY - rect.top;\n            let ind = null;\n\n            // hovered script\n            for (let i = 0; i < this.dom.childNodes.length; i++) {\n                const otherPanel = this.dom.childNodes[i].ui;\n                const otherTop = otherPanel.dom.offsetTop;\n                if (i < childPanelIndex) {\n                    if (y <= otherTop + otherPanel.header.height) {\n                        ind = i;\n                        break;\n                    }\n                } else if (i > childPanelIndex) {\n                    if (y + childPanel.height >= otherTop + otherPanel.height) {\n                        ind = i;\n                        break;\n                    }\n                }\n            }\n\n            if (ind !== null && childPanelIndex !== ind) {\n                this.remove(childPanel);\n                if (ind < childPanelIndex) {\n                    this.appendBefore(childPanel, this.dom.childNodes[ind]);\n                } else {\n                    this.appendAfter(childPanel, this.dom.childNodes[ind - 1]);\n                }\n            }\n        }\n\n        _onChildDragEnd(evt, childPanel) {\n            this.class.remove(CLASS_DRAGGED_CHILD);\n\n            childPanel.class.remove(CLASS_DRAGGED);\n\n            const index = this._getDraggedChildIndex(childPanel);\n\n            this.emit('child:dragend', childPanel, index, this._draggedStartIndex);\n\n            this._draggedStartIndex = -1;\n        }\n\n        forEachChild(fn) {\n            for (let i = 0; i < this.dom.childNodes.length; i++) {\n                const node = this.dom.childNodes[i].ui;\n                if (node) {\n                    const result = fn(node);\n                    if (result === false) {\n                        // early out\n                        break;\n                    }\n                }\n            }\n        }\n\n        /**\n         * If the current node contains a root, recursively append it's children to this node\n         * and return it. Otherwise return the current node. Also add each child to the parent\n         * under its keyed name.\n         *\n         * @param {Object} node - The current element in the dom structure which must be recursively\n         * traversed and appended to it's parent\n         *\n         * @returns {pcui.Element} - The recursively appended element node\n         *\n         */\n        _buildDomNode(node) {\n            const keys = Object.keys(node);\n            let rootNode;\n            if (keys.includes('root')) {\n                rootNode = this._buildDomNode(node.root);\n                node.children.forEach(childNode => {\n                    const childNodeElement = this._buildDomNode(childNode);\n                    if (childNodeElement !== null) {\n                        rootNode.append(childNodeElement);\n                    }\n                });\n            } else {\n                rootNode = node[keys[0]];\n                this[`_${keys[0]}`] = rootNode;\n            }\n            return rootNode;\n        }\n\n        /**\n         * Takes an array of pcui elements, each of which can contain their own child elements, and\n         * appends them to this container. These child elements are traversed recursively using\n         * _buildDomNode.\n         *\n         * @param {array} dom - An array of child pcui elements to append to this container.\n         *\n         * @example\n         *\n         *     buildDom([\n         *          {\n         *              child1: pcui.Label()\n         *          },\n         *          {\n         *              root: {\n         *                  container1: pcui.Container()\n         *              },\n         *              children: {\n         *                  [\n         *                      {child2: pcui.Label()},\n         *                      {child3: pcui.Label()}\n         *                  ]\n         *              }\n         *          }\n         *     ])\n         */\n        buildDom(dom) {\n            dom.forEach(node => {\n                const builtNode = this._buildDomNode(node);\n                this.append(builtNode);\n            });\n        }\n\n        destroy() {\n            if (this._destroyed) return;\n            this.domContent = null;\n\n            if (this._domResizeHandle) {\n                this._domResizeHandle.removeEventListener('mousedown', this._domEventResizeStart);\n                window.removeEventListener('mousemove', this._domEventResizeMove);\n                window.removeEventListener('mouseup', this._domEventResizeEnd);\n\n                this._domResizeHandle.removeEventListener('touchstart', this._domEventResizeTouchStart);\n                window.removeEventListener('touchmove', this._domEventResizeTouchMove);\n                window.removeEventListener('touchend', this._domEventResizeTouchEnd);\n            }\n\n            this._domResizeHandle = null;\n            this._domEventResizeStart = null;\n            this._domEventResizeMove = null;\n            this._domEventResizeEnd = null;\n            this._domEventResizeTouchStart = null;\n            this._domEventResizeTouchMove = null;\n            this._domEventResizeTouchEnd = null;\n            this._domEventScroll = null;\n\n            super.destroy();\n        }\n\n        get flex() {\n            return this._flex;\n        }\n\n        set flex(value) {\n            if (value === this._flex) return;\n\n            this._flex = value;\n\n            if (value) {\n                this.classAdd(pcui.CLASS_FLEX);\n            } else {\n                this.classRemove(pcui.CLASS_FLEX);\n            }\n        }\n\n        get grid() {\n            return this._grid;\n        }\n\n        set grid(value) {\n            if (value === this._grid) return;\n\n            this._grid = value;\n\n            if (value) {\n                this.classAdd(pcui.CLASS_GRID);\n            } else {\n                this.classRemove(pcui.CLASS_GRID);\n            }\n        }\n\n        get scrollable() {\n            return this._scrollable;\n        }\n\n        set scrollable(value) {\n            if (this._scrollable === value) return;\n\n            this._scrollable = value;\n\n            if (value) {\n                this.classAdd(pcui.CLASS_SCROLLABLE);\n            } else {\n                this.classRemove(pcui.CLASS_SCROLLABLE);\n            }\n\n        }\n\n        get resizable() {\n            return this._resizable;\n        }\n\n        set resizable(value) {\n            if (value === this._resizable) return;\n\n            if (VALID_RESIZABLE_VALUES.indexOf(value) === -1) {\n                console.error('Invalid resizable value: must be one of ' + VALID_RESIZABLE_VALUES.join(','));\n                return;\n            }\n\n            // remove old class\n            if (this._resizable) {\n                this.classRemove(`${pcui.CLASS_RESIZABLE}-${this._resizable}`);\n            }\n\n            this._resizable = value;\n            this._resizeHorizontally = (value === 'right' || value === 'left');\n\n            if (value) {\n                // add resize class and create / append resize handle\n                this.classAdd(pcui.CLASS_RESIZABLE);\n                this.classAdd(`${pcui.CLASS_RESIZABLE}-${value}`);\n\n                if (!this._domResizeHandle) {\n                    this._createResizeHandle();\n                }\n                this._dom.appendChild(this._domResizeHandle);\n            } else {\n                // remove resize class and resize handle\n                this.classRemove(pcui.CLASS_RESIZABLE);\n                if (this._domResizeHandle) {\n                    this._dom.removeChild(this._domResizeHandle);\n                }\n            }\n\n        }\n\n        get resizeMin() {\n            return this._resizeMin;\n        }\n\n        set resizeMin(value) {\n            this._resizeMin = Math.max(0, Math.min(value, this._resizeMax));\n        }\n\n        get resizeMax() {\n            return this._resizeMax;\n        }\n\n        set resizeMax(value) {\n            this._resizeMax = Math.max(this._resizeMin, value);\n        }\n\n        // The internal dom element used as a the container of all children.\n        // Can be overriden by derived classes\n        get domContent() {\n            return this._domContent;\n        }\n\n        set domContent(value) {\n            if (this._domContent === value) return;\n\n            if (this._domContent) {\n                this._domContent.removeEventListener('scroll', this._domEventScroll);\n            }\n\n            this._domContent = value;\n\n            if (this._domContent) {\n                this._domContent.addEventListener('scroll', this._domEventScroll);\n            }\n        }\n    }\n\n    export { Container };\n    export default Container;\n\n//     utils.implements(Container, pcui.IContainer);\n//     utils.implements(Container, pcui.IFlex);\n//     utils.implements(Container, pcui.IGrid);\n//     utils.implements(Container, pcui.IScrollable);\n//     utils.implements(Container, pcui.IResizable);\n\n//     pcui.Element.register('container', Container);\n\n//     return {\n//         Container: Container\n//     };\n// })());\n","// Object.assign(pcui, (function () {\n//     'use strict';\n    import Element from './element'; \n    import * as pcui from '../pcui';\n\n    const CLASS_TEXT_INPUT = 'pcui-text-input';\n\n    /**\n     * @name pcui.TextInput\n     * @classdesc The TextInput is an input element of type text.\n     * @extends pcui.Element\n     * @mixes pcui.IBindable\n     * @mixes pcui.IFocusable\n     * @property {String} placeholder Gets / sets the placeholder label that appears on the right of the input.\n     * @property {HTMLElement} input Gets the HTML input element.\n     * @property {Boolean} renderChanges If true then the TextInput will flash when its text changes.\n     * @property {Boolean} blurOnEnter Gets / sets whether pressing Enter will blur (unfocus) the field. Defaults to true.\n     * @property {Boolean} blurOnEscape Gets / sets whether pressing Escape will blur (unfocus) the field. Defaults to true.\n     * @property {Boolean} keyChange Gets / sets whether any key up event will cause a change event to be fired.} args\n     * @property {Function} onValidate A function that validates the value that is entered into the input and returns true if it is valid or false otherwise.\n     * If false then the input will be set in an error state and the value will not propagate to the binding.\n     */\n    class TextInput extends Element {\n        /**\n         * Creates a new TextInput.\n         * @param {Object} args The arguments. Extends the pcui.Element constructor arguments. All settable properties can also be set through the constructor.\n         */\n        constructor(args) {\n            if (!args) args = {};\n            super(document.createElement('div'), args);\n\n            this.class.add(CLASS_TEXT_INPUT);\n\n            let input = args.input;\n            if (!input) {\n                input = document.createElement('input');\n                input.ui = this;\n                input.type = 'text';\n                input.tabIndex = 0;\n            }\n            this._domInput = input;\n\n            this._domEvtChange = this._onInputChange.bind(this);\n            this._domEvtFocus = this._onInputFocus.bind(this);\n            this._domEvtBlur = this._onInputBlur.bind(this);\n            this._domEvtKeyDown = this._onInputKeyDown.bind(this);\n            this._domEvtKeyUp = this._onInputKeyUp.bind(this);\n            this._domEvtCtxMenu = this._onInputCtxMenu.bind(this);\n\n            this._domInput.addEventListener('change', this._domEvtChange);\n            this._domInput.addEventListener('focus', this._domEvtFocus);\n            this._domInput.addEventListener('blur', this._domEvtBlur);\n            this._domInput.addEventListener('keydown', this._domEvtKeyDown);\n            this._domInput.addEventListener('contextmenu', this._domEvtCtxMenu, false);\n            this.dom.appendChild(this._domInput);\n\n            this._suspendInputChangeEvt = false;\n\n            if (args.value !== undefined) {\n                this.value = args.value;\n            }\n            this.placeholder = args.placeholder || null;\n            this.renderChanges = args.renderChanges || false;\n            this.blurOnEnter = (args.blurOnEnter !== undefined ? args.blurOnEnter : true);\n            this.blurOnEscape = (args.blurOnEscape !== undefined ? args.blurOnEscape : true);\n            this.keyChange = args.keyChange || false;\n\n            if (args.onValidate) {\n                this.onValidate = args.onValidate;\n            }\n\n            this.on('change', () => {\n                if (this.renderChanges) {\n                    this.flash();\n                }\n            });\n\n            this.on('disable', this._updateInputReadOnly.bind(this));\n            this.on('enable', this._updateInputReadOnly.bind(this));\n            this.on('readOnly', this._updateInputReadOnly.bind(this));\n            this._updateInputReadOnly();\n        }\n\n        _onInputChange(evt) {\n            if (this._suspendInputChangeEvt) return;\n\n            if (this._onValidate) {\n                const error = !this._onValidate(this.value);\n                this.error = error;\n                if (error) {\n                    return;\n                }\n            } else {\n                this.error = false;\n            }\n\n            this.emit('change', this.value);\n\n            if (this._binding) {\n                this._binding.setValue(this.value);\n            }\n        }\n\n        _onInputFocus(evt) {\n            this.class.add(pcui.CLASS_FOCUS);\n            this.emit('focus', evt);\n        }\n\n        _onInputBlur(evt) {\n            this.class.remove(pcui.CLASS_FOCUS);\n            this.emit('blur', evt);\n        }\n\n        _onInputKeyDown(evt) {\n            if ((evt.keyCode === 27 && this.blurOnEscape) || (evt.keyCode === 13 && this.blurOnEnter)) {\n                this._domInput.blur();\n            }\n\n            this.emit('keydown', evt);\n        }\n\n        _onInputKeyUp(evt) {\n            this._onInputChange(evt);\n\n            this.emit('keyup', evt);\n        }\n\n        _onInputCtxMenu(evt) {\n            this._domInput.select();\n        }\n\n        _updateInputReadOnly() {\n            const readOnly = !this.enabled || this.readOnly;\n            if (readOnly) {\n                this._domInput.setAttribute('readonly', true);\n            } else {\n                this._domInput.removeAttribute('readonly');\n            }\n        }\n\n        _updateValue(value) {\n            this.class.remove(pcui.CLASS_MULTIPLE_VALUES);\n\n            if (value === this.value) return false;\n\n            this._suspendInputChangeEvt = true;\n            this._domInput.value = (value === null || value === undefined) ? '' : value;\n            this._suspendInputChangeEvt = false;\n\n            this.emit('change', value);\n\n            return true;\n        }\n\n        /**\n         * @name pcui.TextInput#focus\n         * @description Focuses the Element.\n         * @param {Boolean} select If true then this will also select the text after focusing.\n         */\n        focus(select) {\n            this._domInput.focus();\n            if (select) {\n                this._domInput.select();\n            }\n        }\n\n        /**\n         * @name pcui.TextInput#blur\n         * @description Blurs (unfocuses) the Element.\n         */\n        blur() {\n            this._domInput.blur();\n        }\n\n        destroy() {\n            if (this._destroyed) return;\n            this._domInput.removeEventListener('change', this._domEvtChange);\n            this._domInput.removeEventListener('focus', this._domEvtFocus);\n            this._domInput.removeEventListener('blur', this._domEvtBlur);\n            this._domInput.removeEventListener('keydown', this._domEvtKeyDown);\n            this._domInput.removeEventListener('keyup', this._domEvtKeyUp);\n            this._domInput.removeEventListener('contextmenu', this._domEvtCtxMenu);\n            this._domInput = null;\n\n            super.destroy();\n        }\n\n        get value() {\n            return this._domInput.value;\n        }\n\n        set value(value) {\n            const changed = this._updateValue(value);\n\n            if (changed) {\n                // reset error\n                this.error = false;\n            }\n\n            if (changed && this._binding) {\n                this._binding.setValue(value);\n            }\n        }\n\n        set values(values) {\n            let different = false;\n            const value = values[0];\n            for (let i = 1; i < values.length; i++) {\n                if (values[i] !== value) {\n                    different = true;\n                    break;\n                }\n            }\n\n            if (different) {\n                this._updateValue(null);\n                this.class.add(pcui.CLASS_MULTIPLE_VALUES);\n            } else {\n                this._updateValue(values[0]);\n            }\n        }\n\n        get placeholder() {\n            return this.dom.getAttribute('placeholder');\n        }\n\n        set placeholder(value) {\n            if (value) {\n                this.dom.setAttribute('placeholder', value);\n            } else {\n                this.dom.removeAttribute('placeholder');\n            }\n        }\n\n        get keyChange() {\n            return this._keyChange;\n        }\n\n        set keyChange(value) {\n            if (this._keyChange === value) return;\n\n            this._keyChange = value;\n            if (value) {\n                this._domInput.addEventListener('keyup', this._domEvtKeyUp);\n            } else {\n                this._domInput.removeEventListener('keyup', this._domEvtKeyUp);\n            }\n        }\n\n        get input() {\n            return this._domInput;\n        }\n\n        get onValidate() {\n            return this._onValidate;\n        }\n\n        set onValidate(value) {\n            this._onValidate = value;\n        }\n    }\n\n    export default TextInput;\n\n//     utils.implements(TextInput, pcui.IBindable);\n//     utils.implements(TextInput, pcui.IFocusable);\n\n//     pcui.Element.register('string', TextInput, { renderChanges: true });\n\n//     return {\n//         TextInput: TextInput\n//     };\n// })());\n","// Object.assign(pcui, (function () {\n    // 'use strict';\n    import Element from './element'; \n\n    const CLASS_BUTTON = 'pcui-button';\n\n    /**\n     * @name pcui.Button\n     * @classdesc Represents a button.\n     * @property {String} text Gets / sets the text of the button\n     * @property {String} size Gets / sets the 'size' type of the button. Can be null or 'small'.\n     * @property {String} icon The CSS code for an icon for the button. e.g. E401 (notice we omit the '\\' character).\n     * @mixes pcui.IFocusable\n     */\n    class Button extends Element {\n        /**\n         * Creates a new Button.\n         * @param {Object} args The arguments. Extends the pcui.Element constructor arguments. All settable properties can also be set through the constructor.\n         * @param {Boolean} [args.unsafe] If true then the innerHTML property will be used to set the text. Otherwise textContent will be used instead.\n         */\n        constructor(args) {\n            if (!args) args = {};\n\n            super(document.createElement('button'), args);\n\n            this.class.add(CLASS_BUTTON);\n\n            this._unsafe = args.unsafe || false;\n\n            this.text = args.text || '';\n            this.size = args.size || null;\n            this.icon = args.icon || '';\n\n            this._domEventKeyDown = this._onKeyDown.bind(this);\n            this.dom.addEventListener('keydown', this._onKeyDown.bind(this));\n        }\n\n        // click on enter\n        // blur on escape\n        _onKeyDown(evt) {\n            if (evt.keyCode === 27) {\n                this.blur();\n            } else if (evt.keyCode === 13) {\n                this._onClick(evt);\n            }\n        }\n\n        _onClick(evt) {\n            this.blur();\n            if (this.readOnly) return;\n\n            super._onClick(evt);\n        }\n\n        focus() {\n            this.dom.focus();\n        }\n\n        blur() {\n            this.dom.blur();\n        }\n\n        destroy() {\n            if (this._destroyed) return;\n\n            this.dom.removeEventListener('keydown', this._domEventKeyDown);\n            super.destroy();\n        }\n\n        get text() {\n            return this._text;\n        }\n\n        set text(value) {\n            if (this._text === value) return;\n            this._text = value;\n            if (this._unsafe) {\n                this.dom.innerHTML = value;\n            } else {\n                this.dom.textContent = value;\n            }\n        }\n\n        get icon() {\n            return this._icon;\n        }\n\n        set icon(value) {\n            if (this._icon === value) return;\n            this._icon = value;\n            if (value) {\n                // set data-icon attribute but first convert the value to a code point\n                this.dom.setAttribute('data-icon', String.fromCodePoint(parseInt(value, 16)));\n            } else {\n                this.dom.removeAttribute('data-icon');\n            }\n        }\n\n        get size() {\n            return this._size;\n        }\n\n        set size(value) {\n            if (this._size === value) return;\n            if (this._size) {\n                this.class.remove('pcui-' + this._size);\n                this._size = null;\n            }\n\n            this._size = value;\n\n            if (this._size) {\n                this.class.add('pcui-' + this._size);\n            }\n        }\n    }\n\n    export { Button };\n    export default Button;\n\n//     utils.implements(Button, pcui.IFocusable);\n\n//     pcui.Element.register('button', Button);\n\n//     return {\n//         Button: Button\n//     };\n// })());\n","// Object.assign(pcui, (function () {\n//     'use strict';\n    import * as pcui from '../pcui';\n    import Element from './element'; \n\n    const CLASS_LABEL = 'pcui-label';\n\n    /**\n     * @name pcui.Label\n     * @classdesc The Label is a simple span element that displays some text.\n     * @property {String} placeholder Gets / sets the placeholder label that appears on the right of the label.\n     * @property {String} text Gets / sets the text of the Label.\n     * @property {Boolean} renderChanges If true then the Label will flash when its text changes.\n     * @extends pcui.Element\n     * @mixes pcui.IBindable\n     */\n    class Label extends Element {\n        /**\n         * Creates a new Label.\n         * @param {Object} args The arguments. Extends the pcui.Element constructor arguments. All settable properties can also be set through the constructor.\n         * @param {Boolean} [args.unsafe] If true then the innerHTML property will be used to set the text. Otherwise textContent will be used instead.\n         * @param {Boolean} [args.nativeTooltip] If true then use the text of the label as the native HTML tooltip.\n         * @param {Boolean} [args.allowTextSelection] If true then the label can be clicked to select text.\n         */\n        constructor(args) {\n            if (!args) args = {};\n\n            super(document.createElement('span'), args);\n\n            this.class.add(CLASS_LABEL);\n\n            this._unsafe = args.unsafe || false;\n            this.text = args.text || args.value || '';\n\n            if (args.allowTextSelection) {\n                this.class.add(pcui.CLASS_DEFAULT_MOUSEDOWN);\n            }\n\n            if (args.nativeTooltip) {\n                this.dom.title = this.text;\n            }\n            this.placeholder = args.placeholder || null;\n\n            this.renderChanges = args.renderChanges || false;\n\n            this.on('change', () => {\n                if (this.renderChanges) {\n                    this.flash();\n                }\n            });\n        }\n\n        _updateText(value) {\n            this.class.remove(pcui.CLASS_MULTIPLE_VALUES);\n\n            if (this._text === value) return false;\n\n            this._text = value;\n\n            if (this._unsafe) {\n                this._dom.innerHTML = value;\n            } else {\n                this._dom.textContent = value;\n            }\n\n            this.emit('change', value);\n\n            return true;\n        }\n\n        get text() {\n            return this._text;\n        }\n\n        set text(value) {\n            if (value === undefined || value === null) {\n                value = '';\n            }\n\n            const changed = this._updateText(value);\n\n            if (changed && this._binding) {\n                this._binding.setValue(value);\n            }\n        }\n\n        get value() {\n            return this.text;\n        }\n\n        set value(value) {\n            this.text = value;\n        }\n\n        set values(values) {\n            let different = false;\n            const value = values[0];\n            for (let i = 1; i < values.length; i++) {\n                if (values[i] !== value) {\n                    different = true;\n                    break;\n                }\n            }\n\n            if (different) {\n                this._updateText('');\n                this.class.add(pcui.CLASS_MULTIPLE_VALUES);\n            } else {\n                this._updateText(values[0]);\n            }\n        }\n\n        get placeholder() {\n            return this.dom.getAttribute('placeholder');\n        }\n\n        set placeholder(value) {\n            if (value) {\n                this.dom.setAttribute('placeholder', value);\n            } else {\n                this.dom.removeAttribute('placeholder');\n            }\n        }\n    }\n\n    export { Label };\n    export default Label;\n\n//     utils.implements(Label, pcui.IBindable);\n\n//     pcui.Element.register('label', Label);\n\n//     return {\n//         Label: Label\n//     };\n// })());\n","    // calculate, how many string `a`\n    // requires edits, to become string `b`\n    export const searchStringEditDistance = function(a, b) {\n        // Levenshtein distance\n        // https://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance#JavaScript\n        if(a.length === 0) return b.length;\n        if(b.length === 0) return a.length;\n        if(a === b) return 0;\n\n        var i, j;\n        var matrix = [];\n\n        for(i = 0; i <= b.length; i++)\n            matrix[i] = [i];\n\n        for(j = 0; j <= a.length; j++)\n            matrix[0][j] = j;\n\n        for(i = 1; i <= b.length; i++){\n            for(j = 1; j <= a.length; j++){\n                if(b.charAt(i-1) === a.charAt(j-1)){\n                    matrix[i][j] = matrix[i-1][j-1];\n                } else {\n                    matrix[i][j] = Math.min(matrix[i-1][j-1] + 1, Math.min(matrix[i][j-1] + 1, matrix[i-1][j] + 1));\n                }\n            }\n        }\n\n        return matrix[b.length][a.length];\n    };\n\n\n    // calculate, how many characters string `b`\n    // contains of a string `a`\n    export const searchCharsContains = function(a, b) {\n        if (a === b)\n            return a.length;\n\n        var contains = 0;\n        var ind = { };\n        var i;\n\n        for(i = 0; i < b.length; i++)\n            ind[b.charAt(i)] = true;\n\n        for(i = 0; i < a.length; i++) {\n            if(ind[a.charAt(i)])\n                contains++;\n        }\n\n        return contains;\n    };\n\n\n    // tokenize string into array of tokens\n    export const searchStringTokenize = function(name) {\n        var tokens = [ ];\n\n        // camelCase\n        // upperCASE123\n        var string = name.replace(/([^A-Z])([A-Z][^A-Z])/g, '$1 $2').replace(/([A-Z0-9]{2,})/g, ' $1');\n\n        // space notation\n        // dash-notation\n        // underscore_notation\n        var parts = string.split(/(\\s|\\-|_)/g);\n\n        // filter valid tokens\n        for(var i = 0; i < parts.length; i++) {\n            parts[i] = parts[i].toLowerCase().trim();\n            if (parts[i] && parts[i] !== '-' && parts[i] !== '_')\n                tokens.push(parts[i]);\n        }\n\n        return tokens;\n    };\n\n\n    const _searchItems = function(items, search, args) {\n        var results = [ ];\n\n        for(var i = 0; i < items.length; i++) {\n            var item = items[i];\n\n            // direct hit\n            if (item.subFull !== Infinity) {\n                results.push(item);\n\n                if (item.edits === Infinity)\n                    item.edits = 0;\n\n                if (item.sub === Infinity)\n                    item.sub = item.subFull;\n\n                continue;\n            } else if (item.name === search || item.name.indexOf(search) === 0) {\n                results.push(item);\n\n                if (item.edits === Infinity)\n                    item.edits = 0;\n\n                if (item.sub === Infinity)\n                    item.sub = 0;\n\n                continue;\n            }\n\n            // check if name contains enough of search characters\n            var contains = searchCharsContains(search, item.name);\n            if (contains / search.length < args.containsCharsTolerance)\n                continue;\n\n            var editsCandidate = Infinity;\n            var subCandidate = Infinity;\n\n            // for each token\n            for(var t = 0; t < item.tokens.length; t++) {\n                // direct token match\n                if (item.tokens[t] === search) {\n                    editsCandidate = 0;\n                    subCandidate = t;\n                    break;\n                }\n\n                var edits = searchStringEditDistance(search, item.tokens[t]);\n\n                if ((subCandidate === Infinity || edits < editsCandidate) && item.tokens[t].indexOf(search) !== -1) {\n                    // search is a substring of a token\n                    subCandidate = t;\n                    editsCandidate = edits;\n                    continue;\n                } else if (subCandidate === Infinity && edits < editsCandidate) {\n                    // new edits candidate, not a substring of a token\n                    if ((edits / Math.max(search.length, item.tokens[t].length)) <= args.editsDistanceTolerance) {\n                        // check if edits tolerance is satisfied\n                        editsCandidate = edits;\n                    }\n                }\n            }\n\n            // no match candidate\n            if (editsCandidate === Infinity)\n                continue;\n\n            // add new result\n            results.push(item);\n            item.edits = item.edits === Infinity ? editsCandidate : item.edits + editsCandidate;\n            item.sub = item.sub === Infinity ? subCandidate : item.sub + subCandidate;\n        }\n\n        return results;\n    };\n\n    // perform search through items\n    // items is an array with arrays of two values\n    // where first value is a string to be searched by\n    // and second value is an object to be found\n    /*\n    [\n        [ 'camera', {object} ],\n        [ 'New Entity', {object} ],\n        [ 'Sun', {object} ]\n    ]\n    */\n    export const searchItems = function(items, search, args) {\n        search = (search || '').toLowerCase().trim();\n\n        if (! search)\n            return [ ];\n\n        var searchTokens = searchStringTokenize(search);\n        if (! searchTokens.length)\n            return [ ];\n\n        args = args || { };\n        args.containsCharsTolerance = args.containsCharsTolerance || 0.5;\n        args.editsDistanceTolerance = args.editsDistanceTolerance || 0.5;\n\n        var result = [ ];\n        var records = [ ];\n\n        for(var i = 0; i < items.length; i++) {\n            var subInd = items[i][0].toLowerCase().trim().indexOf(search);\n\n            records.push({\n                name: items[i][0],\n                item: items[i][1],\n                tokens: searchStringTokenize(items[i][0]),\n                edits: Infinity,\n                subFull: (subInd !== -1) ? subInd : Infinity,\n                sub: Infinity\n            });\n        }\n\n        // search each token\n        for(var i = 0; i < searchTokens.length; i++)\n            records = _searchItems(records, searchTokens[i], args);\n\n        // sort result first by substring? then by edits number\n        records.sort(function(a, b) {\n            if (a.subFull !== b.subFull) {\n                return a.subFull - b.subFull;\n            } else if (a.sub !== b.sub) {\n                return a.sub - b.sub;\n            } else if (a.edits !== b.edits) {\n                return a.edits - b.edits;\n            } else {\n                return a.name.length - b.name.length;\n            }\n        });\n\n        // return only items without match information\n        for(var i = 0; i < records.length; i++)\n            records[i] = records[i].item;\n\n        // limit number of results\n        if (args.hasOwnProperty('limitResults') && records.length > args.limitResults) {\n            records = records.slice(0, args.limitResults);\n        }\n\n        return records;\n    };\n","// Object.assign(pcui, (function () {\n//     'use strict';\n\n    import Element from './element'; \n    import Container from './element-container'; \n    import TextInput from './element-text-input'; \n    import Button from './element-button'; \n    import Label from './element-label'; \n    import * as pcui from '../pcui';\n    import { searchItems } from '../helpers/search';\n    \n\n    const CLASS_SELECT_INPUT = 'pcui-select-input';\n    const CLASS_SELECT_INPUT_CONTAINER_VALUE = CLASS_SELECT_INPUT + '-container-value';\n    const CLASS_MULTI_SELECT = CLASS_SELECT_INPUT + '-multi';\n    const CLASS_ALLOW_INPUT = 'pcui-select-input-allow-input';\n    const CLASS_VALUE = CLASS_SELECT_INPUT + '-value';\n    const CLASS_ICON = CLASS_SELECT_INPUT + '-icon';\n    const CLASS_INPUT = CLASS_SELECT_INPUT + '-textinput';\n    const CLASS_LIST = CLASS_SELECT_INPUT + '-list';\n    const CLASS_TAGS = CLASS_SELECT_INPUT + '-tags';\n    const CLASS_TAGS_EMPTY = CLASS_SELECT_INPUT + '-tags-empty';\n    const CLASS_TAG = CLASS_SELECT_INPUT + '-tag';\n    const CLASS_TAG_NOT_EVERYWHERE = CLASS_SELECT_INPUT + '-tag-not-everywhere';\n    const CLASS_SHADOW = CLASS_SELECT_INPUT + '-shadow';\n    const CLASS_FIT_HEIGHT = CLASS_SELECT_INPUT + '-fit-height';\n    const CLASS_SELECTED = 'pcui-selected';\n    const CLASS_HIGHLIGHTED = CLASS_SELECT_INPUT + '-label-highlighted';\n    const CLASS_CREATE_NEW = CLASS_SELECT_INPUT + '-create-new';\n    const CLASS_OPEN = 'pcui-open';\n\n    const DEFAULT_BOTTOM_OFFSET = 25;\n\n\n    /**\n     * @name pcui.SelectInput\n     * @classdesc An input that allows selecting from a dropdown or entering tags.\n     * @property {Boolean} renderChanges If true then the input will flash when its value changes.\n     * @property {String} placeholder The placeholder text to show next to the current value.\n     * @property {Boolean} multiSelect If true then the input value becomes an array allowing the selection of multiple options. Defaults to false.\n     * @property {Object[]} options The dropdown options of the input. Contains an array of objects with the following format {v: Any, t: String} where v is the value and t is the text of the option.\n     * @property {Any[]} invalidOptions An array of values against which new values are checked before they are created. If a value is in the array it will not be created.\n     * @extends pcui.Element\n     * @mixes pcui.IBindable\n     * @mixes pcui.IFocusable\n     */\n    class SelectInput extends Element {\n        /**\n         * Creates a new SelectInput.\n         * @param {Object} args The arguments. Extends the pcui.Element constructor arguments.\n         * @param {Boolean} [args.allowNull] If true then null is a valid input value. Defaults to false.\n         * @param {Boolean} [args.allowInput] If true then a text field is shown for the user to search for values or enter new ones. Defaults to false.\n         * @param {Boolean} [args.allowCreate] If true then the input allows creating new values from the text field. Only used when allowInput is true. Defaults to false.\n         * @param {Function} [args.createFn] A function to be executed when the user selects to create a new value. The function takes the new value as a parameter.\n         * @param {String} [args.createLabelText] The placeholder text to show when creating a new value. Used when allowInput and allowCreate are both true.\n         * @param {String} [args.type] The type of each value. Can be one of 'string', 'number' or 'boolean'.\n         */\n        constructor(args) {\n            if (!args) args = {};\n\n            // main container\n            const container = new Container();\n            super(container.dom, args);\n            this._container = container;\n            this._container.parent = this;\n\n            this.class.add(CLASS_SELECT_INPUT);\n\n            this._containerValue = new Container({\n                class: CLASS_SELECT_INPUT_CONTAINER_VALUE\n            });\n            this._container.append(this._containerValue);\n\n            // focus / hover shadow element\n            this._domShadow = document.createElement('div');\n            this._domShadow.classList.add(CLASS_SHADOW);\n            this._containerValue.append(this._domShadow);\n\n            this._allowInput = args.allowInput || false;\n            if (this._allowInput) {\n                this.class.add(CLASS_ALLOW_INPUT);\n            }\n\n            this._allowCreate = args.allowCreate || false;\n            this._createFn = args.createFn;\n            this._createLabelText = args.createLabelText || null;\n\n            // displays current value\n            this._labelValue = new Label({\n                class: CLASS_VALUE,\n                tabIndex: 0\n            });\n            this._labelValue.on('click', this._onValueClick.bind(this));\n            this._containerValue.append(this._labelValue);\n\n            this._timeoutLabelValueTabIndex = null;\n\n            // dropdown icon\n            this._labelIcon = new Label({\n                class: CLASS_ICON,\n                hidden: args.allowInput && args.multiSelect\n            });\n            this._containerValue.append(this._labelIcon);\n\n            // input for searching or adding new entries\n            this._input = new TextInput({\n                class: CLASS_INPUT,\n                blurOnEnter: false,\n                keyChange: true\n            });\n            this._containerValue.append(this._input);\n\n            this._lastInputValue = '';\n            this._suspendInputChange = false;\n            this._input.on('change', this._onInputChange.bind(this));\n            this._input.on('keydown', this._onInputKeyDown.bind(this));\n            this._input.on('focus', this._onFocus.bind(this));\n            this._input.on('blur', this._onBlur.bind(this));\n\n            if (args.placeholder) {\n                this.placeholder = args.placeholder;\n            }\n\n            // dropdown list\n            this._containerOptions = new Container({\n                class: CLASS_LIST,\n                hidden: true\n            });\n            this._containerValue.append(this._containerOptions);\n\n            // tags container\n            this._containerTags = new Container({\n                class: CLASS_TAGS,\n                flex: true,\n                flexDirection: 'row',\n                hidden: true\n            });\n            this._container.append(this._containerTags);\n\n            if (args.multiSelect) {\n                this.class.add(CLASS_MULTI_SELECT);\n                this._containerTags.hidden = false;\n            }\n\n            // events\n            this._domEvtKeyDown = this._onKeyDown.bind(this);\n            this._domEvtFocus = this._onFocus.bind(this);\n            this._domEvtBlur = this._onBlur.bind(this);\n            this._domEvtMouseDown = this._onMouseDown.bind(this);\n            this._domEvtWindowMouseDown = this._onWindowMouseDown.bind(this);\n            this._domEvtWheel = this._onWheel.bind(this);\n\n            this._labelValue.dom.addEventListener('keydown', this._domEvtKeyDown);\n            this._labelValue.dom.addEventListener('focus', this._domEvtFocus);\n            this._labelValue.dom.addEventListener('blur', this._domEvtBlur);\n            this._labelValue.dom.addEventListener('mousedown', this._domEvtMouseDown);\n\n            this._containerOptions.dom.addEventListener('wheel', this._domEvtWheel, { passive: true });\n\n            this.on('hide', this.close.bind(this));\n\n            this._type = args.type || 'string';\n\n            this._optionsIndex = {};\n            this._labelsIndex = {};\n            this._labelHighlighted = null;\n            this.invalidOptions = args.invalidOptions;\n            this.options = args.options || [];\n            this._optionsFn = args.optionsFn;\n\n            this._allowNull = args.allowNull || false;\n\n            this._values = null;\n\n            if (args.value !== undefined) {\n                this.value = args.value;\n            } else if (args.defaultValue) {\n                this.value = args.defaultValue;\n            } else {\n                this.value = null;\n            }\n\n            this.renderChanges = args.renderChanges || false;\n\n            this.on('change', () => {\n                this._updateInputFieldsVisibility();\n\n                if (this.renderChanges && !this.multiSelect) {\n                    this._labelValue.flash();\n                }\n            });\n\n            this._updateInputFieldsVisibility(false);\n        }\n\n        _initializeCreateLabel() {\n            const container = new Container({\n                class: CLASS_CREATE_NEW,\n                flex: true,\n                flexDirection: 'row'\n            });\n\n            const label = new Label({\n                text: this._input.value,\n                tabIndex: -1\n            });\n            container.append(label);\n\n            let evtChange = this._input.on('change', value => {\n                // check if label is destroyed\n                // during change event\n                if (label.destroyed) return;\n                label.text = value;\n                if (this.invalidOptions && this.invalidOptions.indexOf(value) !== -1) {\n                    if (!container.hidden) {\n                        container.hidden = true;\n                        this._resizeShadow();\n                    }\n                } else {\n                    if (container.hidden) {\n                        container.hidden = false;\n                        this._resizeShadow();\n                    }\n                }\n            });\n\n            container.on('click', (e) => {\n                e.stopPropagation();\n\n                const text = label.text;\n\n                this.focus();\n                this.close();\n\n                if (this._createFn) {\n                    this._createFn(text);\n                } else if (text) {\n                    this._onSelectValue(text);\n                }\n            });\n\n            label.on('destroy', () => {\n                evtChange.unbind();\n                evtChange = null;\n            });\n\n            const labelCreateText = new Label({\n                text: this._createLabelText\n            });\n            container.append(labelCreateText);\n\n            this._containerOptions.append(container);\n        }\n\n        _convertSingleValue(value) {\n            if (value === null && this._allowNull) return value;\n\n            if (this._type === 'string') {\n                if (!value) {\n                    value = '';\n                } else {\n                    value = value.toString();\n                }\n            } else if (this._type === 'number') {\n                if (!value) {\n                    value = 0;\n                } else {\n                    value = parseInt(value, 10);\n                }\n            } else if (this._type === 'boolean') {\n                return !!value;\n            }\n\n            return value;\n        }\n\n        _convertValue(value) {\n            if (value === null && this._allowNull) return value;\n\n            if (this.multiSelect) {\n                if (!Array.isArray(value)) return value;\n\n                return value.map(val => this._convertSingleValue(val));\n            }\n\n            return this._convertSingleValue(value);\n        }\n\n        // toggle dropdown list\n        _onValueClick() {\n            if (!this.enabled || this.readOnly) return;\n\n            this.toggle();\n        }\n\n        // Update our value with the specified selected option\n        _onSelectValue(value) {\n            value = this._convertSingleValue(value);\n\n            if (!this.multiSelect) {\n                this.value = value;\n                return;\n            }\n\n            if (this._values) {\n                let dirty = false;\n                this._values.forEach(arr => {\n                    if (!arr) {\n                        arr = [value];\n                        dirty = true;\n                    } else {\n                        if (arr.indexOf(value) === -1) {\n                            arr.push(value);\n                            dirty = true;\n                        }\n                    }\n                });\n\n                if (dirty) {\n                    this._onMultipleValuesChange(this._values);\n\n                    this.emit('change', this.value);\n\n                    if (this._binding) {\n                        this._binding.addValues([value]);\n                    }\n                }\n            } else {\n                if (!this._value || !Array.isArray(this._value)) {\n                    this.value = [value];\n                } else {\n                    if (this._value.indexOf(value) === -1) {\n                        this._value.push(value);\n\n                        this._addTag(value);\n\n                        this.emit('change', this.value);\n\n                        if (this._binding) {\n                            this._binding.addValues([value]);\n                        }\n                    }\n                }\n            }\n        }\n\n        _highlightLabel(label) {\n            if (this._labelHighlighted === label) return;\n\n            if (this._labelHighlighted) {\n                this._labelHighlighted.class.remove(CLASS_HIGHLIGHTED);\n            }\n\n            this._labelHighlighted = label;\n\n            if (this._labelHighlighted) {\n                this._labelHighlighted.class.add(CLASS_HIGHLIGHTED);\n\n                // scroll into view if necessary\n                const labelTop = this._labelHighlighted.dom.offsetTop;\n                const scrollTop = this._containerOptions.dom.scrollTop;\n                if (labelTop < scrollTop) {\n                    this._containerOptions.dom.scrollTop = labelTop;\n                } else if (labelTop + this._labelHighlighted.height > this._containerOptions.height + scrollTop) {\n                    this._containerOptions.dom.scrollTop = labelTop + this._labelHighlighted.height - this._containerOptions.height;\n                }\n            }\n        }\n\n        // when the value is changed show the correct title\n        _onValueChange(value) {\n            if (!this.multiSelect) {\n                this._labelValue.value = this._optionsIndex[value] || '';\n\n                value = '' + value;\n                for (var key in this._labelsIndex) {\n                    if (key === value) {\n                        this._labelsIndex[key].class.add(CLASS_SELECTED);\n                    } else {\n                        this._labelsIndex[key].class.remove(CLASS_SELECTED);\n                    }\n                }\n            } else {\n                this._labelValue.value = '';\n                this._containerTags.clear();\n                this._containerTags.class.add(CLASS_TAGS_EMPTY);\n\n                if (value && Array.isArray(value)) {\n                    value.forEach(val => {\n                        this._addTag(val);\n                        if (this._labelsIndex[val]) {\n                            this._labelsIndex[val].class.add(CLASS_SELECTED);\n                        }\n                    });\n\n                    for (const key in this._labelsIndex) {\n                        if (value.indexOf(this._convertSingleValue(key)) !== -1) {\n                            this._labelsIndex[key].class.add(CLASS_SELECTED);\n                        } else {\n                            this._labelsIndex[key].class.remove(CLASS_SELECTED);\n                        }\n                    }\n                }\n            }\n        }\n\n        _onMultipleValuesChange(values) {\n            this._labelValue.value = '';\n            this._containerTags.clear();\n            this._containerTags.class.add(CLASS_TAGS_EMPTY);\n\n            const tags = {};\n            const valueCounts = {};\n            values.forEach(arr => {\n                if (!arr) return;\n                arr.forEach(val => {\n                    if (!tags[val]) {\n                        tags[val] = this._addTag(val);\n                        valueCounts[val] = 1;\n                    } else {\n                        valueCounts[val]++;\n                    }\n                });\n            });\n\n            // add special class to tags that do not exist everywhere\n            for (var val in valueCounts) {\n                if (valueCounts[val] !== values.length) {\n                    tags[val].class.add(CLASS_TAG_NOT_EVERYWHERE);\n                    if (this._labelsIndex[val]) {\n                        this._labelsIndex[val].class.remove(CLASS_SELECTED);\n                    }\n                }\n            }\n        }\n\n        _addTag(value) {\n            const container = new Container({\n                flex: true,\n                flexDirection: 'row',\n                class: CLASS_TAG\n            });\n\n            container.append(new Label({\n                text: this._optionsIndex[value] || value\n            }));\n\n            const btnRemove = new Button({\n                size: 'small',\n                icon: 'E132',\n                tabIndex: -1\n            });\n\n            container.append(btnRemove);\n\n            btnRemove.on('click', () => this._removeTag(container, value));\n\n            this._containerTags.append(container);\n            this._containerTags.class.remove(CLASS_TAGS_EMPTY);\n\n            if (this._labelsIndex[value]) {\n                this._labelsIndex[value].class.add(CLASS_SELECTED);\n            }\n\n            container.value = value;\n\n            return container;\n        }\n\n        _removeTag(tagElement, value) {\n            tagElement.destroy();\n\n            if (this._labelsIndex[value]) {\n                this._labelsIndex[value].class.remove(CLASS_SELECTED);\n            }\n\n            if (this._values) {\n                this._values.forEach(arr => {\n                    if (!arr) return;\n                    const idx = arr.indexOf(value);\n                    if (idx !== -1) {\n                        arr.splice(idx, 1);\n                    }\n                });\n            } else if (this._value && Array.isArray(this._value)) {\n                const idx = this._value.indexOf(value);\n                if (idx !== -1) {\n                    this._value.splice(idx, 1);\n                }\n            }\n\n            this.emit('change', this.value);\n\n            if (this._binding) {\n                this._binding.removeValues([value]);\n            }\n        }\n\n        _onInputChange(value) {\n            if (this._suspendInputChange) return;\n\n            if (this._lastInputValue === value) return;\n\n            this.open();\n\n            this._lastInputValue = value;\n\n            this._filterOptions(value);\n        }\n\n        _filterOptions(filter) {\n            const searchIndex = {};\n\n            if (filter) {\n                const searchOptions = this.options.map(option => {\n                    return [option.t, option.v];\n                });\n                const searchResults = searchItems(searchOptions, filter);\n                searchResults.forEach(result => {\n                    searchIndex[result] = true;\n                });\n            }\n\n            let highlighted = false;\n            this._containerOptions.forEachChild(label => {\n                label.hidden = !!filter && !searchIndex[label._optionValue] && !label.class.contains(CLASS_CREATE_NEW);\n                if (!highlighted && !label.hidden) {\n                    this._highlightLabel(label);\n                    highlighted = true;\n                }\n            });\n\n            this._resizeShadow();\n        }\n\n        _onInputKeyDown(evt) {\n            if (evt.keyCode === 13 && this.enabled && !this.readOnly) {\n                evt.stopPropagation();\n                evt.preventDefault();\n\n                // on enter\n                let value;\n\n                if (this._labelHighlighted && this._labelHighlighted._optionValue !== undefined) {\n                    value = this._labelHighlighted._optionValue;\n                } else {\n                    value = this._input.value;\n                }\n\n                if (value !== undefined) {\n                    this.focus();\n                    this.close();\n\n                    if (this._optionsIndex[value]) {\n                        this._onSelectValue(value);\n                    } else if (this._allowCreate) {\n                        if (this._createFn) {\n                            this._createFn(value);\n                        } else {\n                            this._onSelectValue(value);\n                        }\n                    }\n\n                    return;\n                }\n            }\n\n            this._onKeyDown(evt);\n        }\n\n        _onWindowMouseDown(evt) {\n            if (this.dom.contains(evt.target)) return;\n            this.close();\n        }\n\n        _onKeyDown(evt) {\n            // close options on ESC and blur\n            if (evt.keyCode === 27) {\n                this.close();\n                return;\n            }\n\n            // handle tab\n            if (evt.keyCode === 9) {\n                this.close();\n                return;\n            }\n\n            if (!this.enabled || this.readOnly) return;\n\n            if (evt.keyCode === 13 && !this._allowInput) {\n                if (this._labelHighlighted && this._labelHighlighted._optionValue !== undefined) {\n                    this._onSelectValue(this._labelHighlighted._optionValue);\n                    this.close();\n                }\n\n                return;\n            }\n\n            if ([38, 40].indexOf(evt.keyCode) === -1) {\n                return;\n            }\n\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            if ((this._allowInput || this.multiSelect) && this._containerOptions.hidden) {\n                this.open();\n                return;\n            }\n\n            if (this._containerOptions.hidden) {\n                if (!this._options.length) return;\n\n                let index = -1;\n                for (let i = 0; i < this._options.length; i++) {\n                    if (this._options[i].v === this.value) {\n                        index = i;\n                        break;\n                    }\n                }\n\n                if (evt.keyCode === 38) {\n                    index--;\n                } else if (evt.keyCode === 40) {\n                    index++;\n                }\n\n                if (index >= 0 && index < this._options.length) {\n                    this._onSelectValue(this._options[index].v);\n                }\n            } else {\n                if (!this._containerOptions.dom.childNodes.length) return;\n\n                if (!this._labelHighlighted) {\n                    this._highlightLabel(this._containerOptions.dom.childNodes[0].ui);\n                } else {\n                    let highlightedLabelDom = this._labelHighlighted.dom;\n                    do {\n                        if (evt.keyCode === 38) {\n                            highlightedLabelDom = highlightedLabelDom.previousSibling;\n                        } else if (evt.keyCode === 40) {\n                            highlightedLabelDom = highlightedLabelDom.nextSibling;\n                        }\n                    } while (highlightedLabelDom && highlightedLabelDom.ui.hidden);\n\n                    if (highlightedLabelDom) {\n                        this._highlightLabel(highlightedLabelDom.ui);\n                    }\n                }\n            }\n        }\n\n        _resizeShadow() {\n            this._domShadow.style.height = (this._containerValue.height + this._containerOptions.height) + 'px';\n        }\n\n        _onMouseDown() {\n            if (!this._allowInput) {\n                this.focus();\n            }\n        }\n\n        _onFocus() {\n            this.class.add(pcui.CLASS_FOCUS);\n            this.emit('focus');\n            if (!this._input.hidden) {\n                this.open();\n            }\n        }\n\n        _onBlur() {\n            this.class.remove(pcui.CLASS_FOCUS);\n            this.emit('blur');\n        }\n\n        _onWheel(evt) {\n            // prevent scrolling on other stuff like the viewport\n            // when we are scrolling on the select input\n            evt.stopPropagation();\n        }\n\n        _updateInputFieldsVisibility(focused) {\n            let showInput = false;\n            let focusInput = false;\n\n            if (this._allowInput) {\n                if (focused) {\n                    showInput = true;\n                    focusInput = true;\n                } else {\n                    showInput = this.multiSelect || !this._labelsIndex[this.value];\n                }\n            }\n\n            this._labelValue.hidden = showInput;\n            this._labelIcon.hidden = showInput;\n            this._input.hidden = !showInput;\n\n            if (focusInput) {\n                this._input.focus();\n            }\n\n            if (!this._labelValue.hidden) {\n                // prevent label from being focused\n                // right after input gets unfocused\n                this._labelValue.tabIndex = -1;\n\n                if (!this._timeoutLabelValueTabIndex) {\n                    this._timeoutLabelValueTabIndex = requestAnimationFrame(() => {\n                        this._timeoutLabelValueTabIndex = null;\n                        this._labelValue.tabIndex = 0;\n                    });\n                }\n            }\n\n        }\n\n        focus() {\n            if (this._input.hidden) {\n                this._labelValue.dom.focus();\n            } else {\n                this._input.focus();\n            }\n        }\n\n        blur() {\n            if (this._allowInput) {\n                this._input.blur();\n            } else {\n                this._labelValue.dom.blur();\n            }\n        }\n\n        /**\n         * @name pcui.SelectInput#open\n         * @description Opens the dropdown menu\n         */\n        open() {\n            if (!this._containerOptions.hidden || !this.enabled || this.readOnly) return;\n\n            this._updateInputFieldsVisibility(true);\n\n            // auto-update options if necessary\n            if (this._optionsFn) {\n                this.options = this._optionsFn();\n            }\n\n            if (this._containerOptions.dom.childNodes.length === 0) return;\n\n            // highlight label that displays current value\n            this._containerOptions.forEachChild(label => {\n                label.hidden = false;\n                if (label._optionValue === this.value) {\n                    this._highlightLabel(label);\n                }\n            });\n            if (!this._labelHighlighted) {\n                this._highlightLabel(this._containerOptions.dom.childNodes[0].ui);\n            }\n\n            // show options\n            this._containerOptions.hidden = false;\n            this.class.add(CLASS_OPEN);\n\n            // register keydown on entire window\n            window.addEventListener('keydown', this._domEvtKeyDown);\n            // register mousedown on entire window\n            window.addEventListener('mousedown', this._domEvtWindowMouseDown);\n\n            // if the dropdown list goes below the window show it above the field\n            const startField = this._allowInput ? this._input.dom : this._labelValue.dom;\n            const rect = startField.getBoundingClientRect();\n            let fitHeight = (rect.bottom + this._containerOptions.height + DEFAULT_BOTTOM_OFFSET >= window.innerHeight);\n            if (fitHeight && rect.top - this._containerOptions.height < 0) {\n                // if showing it above the field means that some of it will not be visible\n                // then show it below instead and adjust the max height to the maximum available space\n                fitHeight = false;\n                this._containerOptions.style.maxHeight = (window.innerHeight - rect.bottom - DEFAULT_BOTTOM_OFFSET) + 'px';\n            }\n\n            if (fitHeight) {\n                this.class.add(CLASS_FIT_HEIGHT);\n            } else {\n                this.class.remove(CLASS_FIT_HEIGHT);\n            }\n\n            // resize the outer shadow to fit the element and the dropdown list\n            // we need this because the dropdown list is position: absolute\n            this._resizeShadow();\n        }\n\n        /**\n         * @name pcui.SelectInput#close\n         * @description Closes the dropdown menu\n         */\n        close() {\n            // there is a potential bug here if the user has set a max height\n            // themselves then this will be overriden\n            this._containerOptions.style.maxHeight = '';\n\n            this._highlightLabel(null);\n\n            this._updateInputFieldsVisibility(false);\n\n            this._suspendInputChange = true;\n            this._input.value = '';\n            this._lastInputValue = '';\n            this._suspendInputChange = false;\n\n            if (this._containerOptions.hidden) return;\n\n            this._containerOptions.hidden = true;\n\n            this._domShadow.style.height = '';\n\n            this.class.remove(CLASS_OPEN);\n            window.removeEventListener('keydown', this._domEvtKeyDown);\n            window.removeEventListener('mousedown', this._domEvtWindowMouseDown);\n        }\n\n        /**\n         * @name pcui.SelectInput#toggle\n         * @description Toggles the dropdown menu\n         */\n        toggle() {\n            if (this._containerOptions.hidden) {\n                this.open();\n            } else {\n                this.close();\n            }\n        }\n\n        unlink() {\n            super.unlink();\n\n            if (!this._containerOptions.hidden) {\n                this.close();\n            }\n        }\n\n        destroy() {\n            if (this._destroyed) return;\n\n            this._labelValue.dom.removeEventListener('keydown', this._domEvtKeyDown);\n            this._labelValue.dom.removeEventListener('mousedown', this._domEvtMouseDown);\n            this._labelValue.dom.removeEventListener('focus', this._domEvtFocus);\n            this._labelValue.dom.removeEventListener('blur', this._domEvtBlur);\n\n            this._containerOptions.dom.removeEventListener('wheel', this._domEvtWheel);\n\n            window.removeEventListener('keydown', this._domEvtKeyDown);\n            window.removeEventListener('mousedown', this._domEvtWindowMouseDown);\n\n            if (this._timeoutLabelValueTabIndex) {\n                cancelAnimationFrame(this._timeoutLabelValueTabIndex);\n                this._timeoutLabelValueTabIndex = null;\n            }\n\n            super.destroy();\n        }\n\n        get options() {\n            return this._options.slice();\n        }\n\n        set options(value) {\n            if (this._options && this._options === value) return;\n\n            this._containerOptions.clear();\n            this._labelHighlighted = null;\n            this._optionsIndex = {};\n            this._labelsIndex = {};\n            this._options = value;\n\n            // store each option value -> title pair in the optionsIndex\n            this._options.forEach(option => {\n                this._optionsIndex[option.v] = option.t;\n                if (option.v === '') return;\n\n                const label = new Label({\n                    text: option.t,\n                    tabIndex: -1\n                });\n\n                label._optionValue = option.v;\n\n                // store labels in an index too\n                this._labelsIndex[option.v] = label;\n\n                // on clicking an option set it as the value and close the dropdown list\n                label.on('click', (e) => {\n                    e.stopPropagation();\n                    this._onSelectValue(option.v);\n                    this.close();\n                });\n                this._containerOptions.append(label);\n            });\n\n            if (this._createLabelText) {\n                this._initializeCreateLabel();\n            }\n\n            if (this.multiSelect && this._values) {\n                this._onMultipleValuesChange(this._values);\n            } else {\n                this._onValueChange(this.value);\n            }\n\n            if (this._lastInputValue) {\n                this._filterOptions(this._lastInputValue);\n            }\n        }\n\n        get invalidOptions() {\n            return this._invalidOptions;\n        }\n\n        set invalidOptions(value) {\n            this._invalidOptions = value || null;\n        }\n\n        get multiSelect() {\n            return this.class.contains(CLASS_MULTI_SELECT);\n        }\n\n        get value() {\n            if (!this.multiSelect) {\n                return this._value;\n            }\n\n            // if multi-select then construct an array\n            // value from the tags that are currently visible\n            const result = [];\n            this._containerTags.dom.childNodes.forEach(dom => {\n                result.push(dom.ui.value);\n            });\n\n            return result;\n        }\n\n        set value(value) {\n            this._values = null;\n\n            this._suspendInputChange = true;\n            this._input.value = '';\n            this._lastInputValue = '';\n            this._suspendInputChange = false;\n\n            this.class.remove(pcui.CLASS_MULTIPLE_VALUES);\n\n            value = this._convertValue(value);\n\n            if (this._value === value || this.multiSelect && this._value && this._value.equals(value)) {\n                // if the value is null because we are showing multiple values\n                // but someone wants to actually set the value of all observers to null\n                // then make sure we do not return early\n                if (value !== null || !this._allowNull || !this.class.contains(pcui.CLASS_MULTIPLE_VALUES)) {\n                    return;\n                }\n            }\n\n            this._value = value;\n            this._onValueChange(value);\n\n            this.emit('change', value);\n\n            if (this._binding) {\n                this._binding.setValue(value);\n            }\n        }\n\n        set values(values) {\n            values = values.map(this._convertValue.bind(this));\n\n            let different = false;\n            const value = values[0];\n            const multiSelect = this.multiSelect;\n\n            this._values = null;\n\n            for (let i = 1; i < values.length; i++) {\n                if (values[i] !== value && (!multiSelect || !values[i] || !values[i].equals(value))) {\n                    different = true;\n                    break;\n                }\n            }\n\n            if (different) {\n                this._labelValue.values = values;\n\n                // show all different tags\n                if (multiSelect) {\n                    this._values = values;\n                    this._value = null;\n                    this._onMultipleValuesChange(this._values);\n                    this.emit('change', this.value);\n                } else {\n                    if (this._value !== null) {\n                        this._value = null;\n                        this.emit('change', null);\n                    }\n                }\n\n                this.class.add(pcui.CLASS_MULTIPLE_VALUES);\n            } else {\n                this.value = values[0];\n            }\n        }\n\n        get placeholder() {\n            return this._input.placeholder;\n        }\n\n        set placeholder(value) {\n            this._input.placeholder = value;\n        }\n    }\n\n    export { SelectInput };\n    export default SelectInput;\n\n//     utils.implements(SelectInput, pcui.IBindable);\n//     utils.implements(SelectInput, pcui.IFocusable);\n\n//     pcui.Element.register('select', SelectInput, { renderChanges: true });\n//     pcui.Element.register('multiselect', SelectInput, { multiSelect: true, renderChanges: true });\n//     pcui.Element.register('tags', SelectInput, { allowInput: true, allowCreate: true, multiSelect: true, renderChanges: true });\n\n//     return {\n//         SelectInput: SelectInput\n//     };\n// })());\n","// Object.assign(pcui, (function () {\n//     'use strict';\n    import Element from './element'; \n    import * as pcui from '../pcui';\n\n    const CLASS_BOOLEAN_INPUT = 'pcui-boolean-input';\n    const CLASS_BOOLEAN_INPUT_TICKED = CLASS_BOOLEAN_INPUT + '-ticked';\n    const CLASS_BOOLEAN_INPUT_TOGGLE = CLASS_BOOLEAN_INPUT + '-toggle';\n\n    /**\n     * @name pcui.BooleanInput\n     * @classdesc A checkbox element.\n     * @property {Boolean} renderChanges If true the input will flash when changed.\n     * @extends pcui.Element\n     */\n    class BooleanInput extends Element {\n        /**\n         * Creates a new pcui.BooleanInput.\n         * @param {Object} args The arguments.\n         * @param {String} [args.type] The type of checkbox currently can be null or 'toggle'.\n         */\n        constructor(args) {\n            args = Object.assign({\n                tabIndex: 0\n            }, args);\n\n            super(document.createElement('div'), args);\n\n            if (args.type === 'toggle') {\n                this.class.add(CLASS_BOOLEAN_INPUT_TOGGLE);\n            } else {\n                this.class.add(CLASS_BOOLEAN_INPUT);\n            }\n            this.class.add(pcui.CLASS_NOT_FLEXIBLE);\n\n            this._domEventKeyDown = this._onKeyDown.bind(this);\n            this._domEventFocus = this._onFocus.bind(this);\n            this._domEventBlur = this._onBlur.bind(this);\n\n            this.dom.addEventListener('keydown', this._domEventKeyDown);\n            this.dom.addEventListener('focus', this._domEventFocus);\n            this.dom.addEventListener('blur', this._domEventBlur);\n\n            this._value = null;\n            if (args.value !== undefined) {\n                this.value = args.value;\n            }\n\n            this.renderChanges = args.renderChanges;\n        }\n\n        _onClick(evt) {\n            if (this.enabled) {\n                this.focus();\n            }\n\n            if (this.enabled && !this.readOnly) {\n                this.value = !this.value;\n            }\n\n            return super._onClick(evt);\n        }\n\n        _onKeyDown(evt) {\n            if (evt.keyCode === 27) {\n                this.blur();\n                return;\n            }\n\n            if (!this.enabled || this.readOnly) return;\n\n            if (evt.keyCode === 32) {\n                evt.stopPropagation();\n                evt.preventDefault();\n                this.value = !this.value;\n            }\n        }\n\n        _onFocus() {\n            this.emit('focus');\n        }\n\n        _onBlur() {\n            this.emit('blur');\n        }\n\n        _updateValue(value) {\n            this.class.remove(pcui.CLASS_MULTIPLE_VALUES);\n\n            if (value === this.value) return false;\n\n            this._value = value;\n\n            if (value) {\n                this.class.add(CLASS_BOOLEAN_INPUT_TICKED);\n            } else {\n                this.class.remove(CLASS_BOOLEAN_INPUT_TICKED);\n            }\n\n            if (this.renderChanges) {\n                this.flash();\n            }\n\n            this.emit('change', value);\n\n            return true;\n        }\n\n        focus() {\n            this.dom.focus();\n        }\n\n        blur() {\n            this.dom.blur();\n        }\n\n        destroy() {\n            if (this._destroyed) return;\n\n            this.dom.removeEventListener('keydown', this._domEventKeyDown);\n            this.dom.removeEventListener('focus', this._domEventFocus);\n            this.dom.removeEventListener('blur', this._domEventBlur);\n\n            super.destroy();\n        }\n\n        get value() {\n            return this._value;\n        }\n\n        set value(value) {\n            const changed = this._updateValue(value);\n            if (changed && this._binding) {\n                this._binding.setValue(value);\n            }\n        }\n\n        set values(values) {\n            let different = false;\n            const value = values[0];\n            for (let i = 1; i < values.length; i++) {\n                if (values[i] !== value) {\n                    different = true;\n                    break;\n                }\n            }\n\n            if (different) {\n                this._updateValue(null);\n                this.class.add(pcui.CLASS_MULTIPLE_VALUES);\n            } else {\n                this._updateValue(values[0]);\n            }\n        }\n    }\n\n    export { BooleanInput };\n    export default BooleanInput;\n\n\n//     utils.implements(BooleanInput, pcui.IBindable);\n//     utils.implements(BooleanInput, pcui.IFocusable);\n\n//     pcui.Element.register('boolean', BooleanInput, { renderChanges: true });\n\n//     return {\n//         BooleanInput: BooleanInput\n//     };\n// })());\n","// Object.assign(pcui, (function () {\n//     'use strict';\n    import TextInput from './element-text-input'; \n    import * as pcui from '../pcui';\n\n    const CLASS_NUMERIC_INPUT = 'pcui-numeric-input';\n\n    /**\n     * @name pcui.NumericInput\n     * @classdesc The NumericInput represents an input element that holds numbers.\n     * @property {Number} min Gets / sets the minimum value this field can take.\n     * @property {Number} max Gets / sets the maximum value this field can take.\n     * @property {Number} precision Gets / sets the maximum number of decimals a value can take.\n     * @property {Number} step Gets / sets the amount that the value will be increased or decreased when using the arrow keys. Holding Shift will use 10x the step.\n     * @extends pcui.TextInput\n     */\n    class NumericInput extends TextInput {\n        /**\n         * Creates a new NumericInput.\n         * @param {Object} args The arguments. Extends the pcui.TextInput constructor arguments.\n         * @param {Boolean} [args.allowNull] Gets / sets whether the value can be null. If not then it will be 0 instead of null.\n         */\n        constructor(args) {\n            // make copy of args\n            args = Object.assign({}, args);\n            const value = args.value;\n            // delete value because we want to set it after\n            // the other arguments\n            delete args.value;\n            const renderChanges = args.renderChanges || false;\n            delete args.renderChanges;\n\n            super(args);\n\n            this.class.add(CLASS_NUMERIC_INPUT);\n\n            this._min = args.min !== undefined ? args.min : null;\n            this._max = args.max !== undefined ? args.max : null;\n            this._allowNull = args.allowNull || false;\n            this._precision = args.precision !== undefined ? args.precision : null;\n\n            if (args.step !== undefined) {\n                this._step = args.step;\n            } else {\n                if (this._precision !== null) {\n                    this._step = 1 / Math.pow(10, this._precision);\n                } else {\n                    this._step  = 1;\n                }\n            }\n\n            this._oldValue = undefined;\n            this.value = value;\n\n            this.renderChanges = renderChanges;\n        }\n\n        _onInputChange(evt) {\n            // get the content of the input and pass it\n            // through our value setter\n            this.value = this._domInput.value;\n        }\n\n        _onInputKeyDown(evt) {\n            if (!this.enabled || this.readOnly) return super._onInputKeyDown(evt);\n\n            // increase / decrease value with arrow keys\n            if (evt.keyCode === 38 || evt.keyCode === 40) {\n                const inc = (evt.shiftKey ? 10 : 1) * (evt.keyCode === 40 ? -1 : 1);\n                this.value = this.value + this.step * inc;\n                return;\n            }\n\n            super._onInputKeyDown(evt);\n        }\n\n        _normalizeValue(value) {\n            if (value === undefined) {\n                value = null;\n            }\n\n            value = parseFloat(value, 10);\n            if (!isNaN(value)) {\n                // clamp between min max\n                if (this.min !== null && value < this.min) {\n                    value = this.min;\n                }\n                if (this.max !== null && value > this.max) {\n                    value = this.max;\n                }\n\n                // fix precision\n                if (this.precision !== null) {\n                    value = parseFloat(value.toFixed(this.precision), 10);\n                }\n            } else if (this._allowNull) {\n                value = null;\n            } else {\n                value = 0;\n            }\n\n            return value;\n        }\n\n        _updateValue(value, force) {\n            const different = (value !== this._oldValue || force);\n\n            // always set the value to the input because\n            // we always want it to show an actual number or nothing\n            this._oldValue = value;\n            this._domInput.value = value;\n\n            this.class.remove(pcui.CLASS_MULTIPLE_VALUES);\n\n            if (different) {\n                this.emit('change', value);\n            }\n\n            return different;\n        }\n\n        get value() {\n            const val = super.value;\n            return val !== '' ? parseFloat(val, 10) : null;\n        }\n\n        set value(value) {\n            value = this._normalizeValue(value);\n\n            const forceUpdate = this.class.contains(pcui.CLASS_MULTIPLE_VALUES) && value === null && this._allowNull;\n            const changed = this._updateValue(value, forceUpdate);\n\n            if (changed && this._binding) {\n                this._binding.setValue(value);\n            }\n        }\n\n        set values(values) {\n            let different = false;\n            const value = this._normalizeValue(values[0]);\n            for (let i = 1; i < values.length; i++) {\n                if (value !== this._normalizeValue(values[i])) {\n                    different = true;\n                    break;\n                }\n            }\n\n            if (different) {\n                this._updateValue(null);\n                this.class.add(pcui.CLASS_MULTIPLE_VALUES);\n            } else {\n                this._updateValue(values[0]);\n            }\n        }\n\n        get min() {\n            return this._min;\n        }\n\n        set min(value) {\n            if (this._min === value) return;\n            this._min = value;\n\n            // reset value\n            if (this._min !== null) {\n                this.value = this.value;\n            }\n        }\n\n        get max() {\n            return this._max;\n        }\n\n        set max(value) {\n            if (this._max === value) return;\n            this._max = value;\n\n            // reset value\n            if (this._max !== null) {\n                this.value = this.value;\n            }\n        }\n\n        get precision() {\n            return this._precision;\n        }\n\n        set precision(value) {\n            if (this._precision === value) return;\n            this._precision = value;\n\n            // reset value\n            if (this._precision !== null) {\n                this.value = this.value;\n            }\n        }\n\n        get step() {\n            return this._step;\n        }\n\n        set step(value) {\n            this._step = value;\n        }\n    }\n\n    export default NumericInput;\n\n//     pcui.Element.register('number', NumericInput, { renderChanges: true });\n\n//     return {\n//         NumericInput: NumericInput\n//     };\n// })());\n","// Object.assign(pcui, (function () {\n//     'use strict';\n    import Element from './element'; \n    import NumericInput from './element-numeric-input'; \n    import * as pcui from '../pcui';\n\n    const CLASS_SLIDER = 'pcui-slider';\n    const CLASS_SLIDER_CONTAINER = CLASS_SLIDER + '-container';\n    const CLASS_SLIDER_BAR = CLASS_SLIDER + '-bar';\n    const CLASS_SLIDER_HANDLE = CLASS_SLIDER + '-handle';\n    const CLASS_SLIDER_ACTIVE = CLASS_SLIDER + '-active';\n\n    // fields that are proxied between the slider and the numeric input\n    const PROXY_FIELDS = [\n        'allowNull',\n        'max',\n        'min',\n        'keyChange',\n        'placeholder',\n        'precision',\n        'renderChanges',\n        'step'\n    ];\n\n    /**\n     * @name pcui.SliderInput\n     * @classdesc The SliderInput shows a pcui.NumericInput and a slider widget next to it. It acts as a proxy\n     * of the NumericInput.\n     * @property {Number} min Gets / sets the minimum value that the numeric input field can take.\n     * @property {Number} max Gets / sets the maximum value that the numeric input field can take.\n     * @property {Number} sliderMin Gets / sets the minimum value that the slider field can take.\n     * @property {Number} sliderMax Gets / sets the maximum value that the slider field can take.\n     * @property {Number} pre Gets / sets the maximum number of decimals a value can take.\n     * @property {Number} step Gets / sets the amount that the value will be increased or decreased when using the arrow keys. Holding Shift will use 10x the step.\n     * @property {Boolean} allowNull Gets / sets whether the value can be null. If not then it will be 0 instead of null.\n     * @extends pcui.Element\n     * @mixes pcui.IBindable\n     * @mixes pcui.IFocusable\n     */\n    class SliderInput extends Element {\n        /**\n         * Creates a new SliderInput.\n         * @param {Object} args The arguments. Extends the pcui.NumericInput constructor arguments.\n         */\n        constructor(args) {\n            args = Object.assign({}, args);\n\n            const inputArgs = {};\n            PROXY_FIELDS.forEach(field => {\n                inputArgs[field] = args[field];\n            });\n\n            if (inputArgs.precision === undefined) {\n                inputArgs.precision = 2;\n            }\n\n            // binding should only go to the slider\n            // and the slider will propagate changes to the numeric input\n            delete inputArgs.binding;\n\n            super(document.createElement('div'), args);\n\n            this.class.add(CLASS_SLIDER);\n\n            this._combineHistory = false;\n\n            this._numericInput = new NumericInput(inputArgs);\n\n            // propagate change event\n            this._numericInput.on('change', this._onValueChange.bind(this));\n            // propagate focus / blur events\n            this._numericInput.on('focus', () => {\n                this.emit('focus');\n            });\n\n            this._numericInput.on('blur', () => {\n                this.emit('blur');\n            });\n\n            this._sliderMin = (args.sliderMin !== undefined ? args.sliderMin : this.min || 0);\n            this._sliderMax = (args.sliderMax !== undefined ? args.sliderMax : this.max || 1);\n\n            this.dom.appendChild(this._numericInput.dom);\n            this._numericInput.parent = this;\n\n            this._domSlider = document.createElement('div');\n            this._domSlider.classList.add(CLASS_SLIDER_CONTAINER);\n            this.dom.appendChild(this._domSlider);\n\n            this._domBar = document.createElement('div');\n            this._domBar.classList.add(CLASS_SLIDER_BAR);\n            this._domBar.ui = this;\n            this._domSlider.appendChild(this._domBar);\n\n            this._domHandle = document.createElement('div');\n            this._domHandle.ui = this;\n            this._domHandle.tabIndex = 0;\n            this._domHandle.classList.add(CLASS_SLIDER_HANDLE);\n            this._domBar.appendChild(this._domHandle);\n\n            this._domMouseDown = this._onMouseDown.bind(this);\n            this._domMouseMove = this._onMouseMove.bind(this);\n            this._domMouseUp = this._onMouseUp.bind(this);\n            this._domTouchStart = this._onTouchStart.bind(this);\n            this._domTouchMove = this._onTouchMove.bind(this);\n            this._domTouchEnd = this._onTouchEnd.bind(this);\n            this._domKeyDown = this._onKeyDown.bind(this);\n\n            this._touchId = null;\n\n            this._domBar.addEventListener('mousedown', this._domMouseDown);\n            this._domBar.addEventListener('touchstart', this._domTouchStart, { passive: true });\n            this._domHandle.addEventListener('keydown', this._domKeyDown);\n        }\n\n        _onMouseDown(evt) {\n            if (evt.button !== 0 || !this.enabled || this.readOnly) return;\n            this._onSlideStart(evt.pageX);\n        }\n\n        _onMouseMove(evt) {\n            evt.stopPropagation();\n            evt.preventDefault();\n            this._onSlideMove(evt.pageX);\n        }\n\n        _onMouseUp(evt) {\n            evt.stopPropagation();\n            evt.preventDefault();\n            this._onSlideEnd(evt.pageX);\n        }\n\n        _onTouchStart(evt) {\n            if (!this.enabled || this.readOnly) return;\n\n            for (let i = 0; i < evt.changedTouches.length; i++) {\n                const touch = evt.changedTouches[i];\n                if (! touch.target.ui || touch.target.ui !== this)\n                    continue;\n\n                this._touchId = touch.identifier;\n                this._onSlideStart(touch.pageX);\n                break;\n            }\n        }\n\n        _onTouchMove(evt) {\n            for (let i = 0; i < evt.changedTouches.length; i++) {\n                const touch = evt.changedTouches[i];\n\n                if (touch.identifier !== this._touchId)\n                    continue;\n\n                evt.stopPropagation();\n                evt.preventDefault();\n\n                this._onSlideMove(touch.pageX);\n                break;\n            }\n        }\n\n        _onTouchEnd(evt) {\n            for (let i = 0; i < evt.changedTouches.length; i++) {\n                const touch = evt.changedTouches[i];\n\n                if (touch.identifier !== this._touchId)\n                    continue;\n\n                evt.stopPropagation();\n                evt.preventDefault();\n\n                this._onSlideEnd(touch.pageX);\n                this._touchId = null;\n                break;\n            }\n        }\n\n        _onKeyDown(evt) {\n            if (evt.keyCode === 27) {\n                this.blur();\n                return;\n            }\n\n            if (!this.enabled || this.readOnly) return;\n\n            // move slider with left / right arrow keys\n            if (evt.keyCode !== 37 && evt.keyCode !== 39) return;\n\n            evt.stopPropagation();\n            evt.preventDefault();\n            let x = evt.keyCode === 37 ? -1 : 1;\n            if (evt.shiftKey) {\n                x *= 10;\n            }\n\n            this.value += x * this.step;\n        }\n\n        _updateHandle(value) {\n            const left = Math.max(0, Math.min(1, ((value || 0) - this._sliderMin) / (this._sliderMax - this._sliderMin))) * 100;\n            this._domHandle.style.left = left + '%';\n        }\n\n        _onValueChange(value) {\n            this._updateHandle(value);\n            this.emit('change', value);\n\n            if (this._binding) {\n                this._binding.setValue(value);\n            }\n        }\n\n        _onSlideStart(pageX) {\n            this._domHandle.focus();\n            if (this._touchId === null) {\n                window.addEventListener('mousemove', this._domMouseMove);\n                window.addEventListener('mouseup', this._domMouseUp);\n            } else {\n                window.addEventListener('touchmove', this._domTouchMove);\n                window.addEventListener('touchend', this._domTouchEnd);\n            }\n\n            this.class.add(CLASS_SLIDER_ACTIVE);\n\n            this._onSlideMove(pageX);\n\n            if (this.binding) {\n                this._combineHistory = this.binding.historyCombine;\n                this.binding.historyCombine = true;\n            }\n        }\n\n        _onSlideMove(pageX) {\n            const rect = this._domSlider.getBoundingClientRect();\n            const x = Math.max(0, Math.min(1, (pageX - rect.left) / rect.width));\n\n            const range = this._sliderMax - this._sliderMin;\n            let value = (x * range) + this._sliderMin;\n            value = parseFloat(value.toFixed(this.precision), 10);\n\n            this.value = value;\n        }\n\n        _onSlideEnd(pageX) {\n            this._onSlideMove(pageX);\n\n            this.class.remove(CLASS_SLIDER_ACTIVE);\n\n            if (this._touchId === null) {\n                window.removeEventListener('mousemove', this._domMouseMove);\n                window.removeEventListener('mouseup', this._domMouseUp);\n            } else {\n                window.removeEventListener('touchmove', this._domTouchMove);\n                window.removeEventListener('touchend', this._domTouchEnd);\n            }\n\n            if (this.binding) {\n                this.binding.historyCombine = this._combineHistory;\n            }\n\n        }\n\n        focus() {\n            this._numericInput.focus();\n        }\n\n        blur() {\n            this._domHandle.blur();\n            this._numericInput.blur();\n        }\n\n        destroy() {\n            if (this._destroyed) return;\n            this._domBar.removeEventListener('mousedown', this._domMouseDown);\n            this._domBar.removeEventListener('touchstart', this._domTouchStart);\n\n            this._domHandle.removeEventListener('keydown', this._domKeyDown);\n\n            this.dom.removeEventListener('mouseup', this._domMouseUp);\n            this.dom.removeEventListener('mousemove', this._domMouseMove);\n            this.dom.removeEventListener('touchmove', this._domTouchMove);\n            this.dom.removeEventListener('touchend', this._domTouchEnd);\n            super.destroy();\n        }\n\n        get sliderMin() {\n            return this._sliderMin;\n        }\n\n        set sliderMin(value) {\n            if (this._sliderMin === value) return;\n\n            this._sliderMin = value;\n            this._updateHandle(this.value);\n        }\n\n        get sliderMax() {\n            return this._sliderMax;\n        }\n\n        set sliderMax(value) {\n            if (this._sliderMax === value) return;\n\n            this._sliderMax = value;\n            this._updateHandle(this.value);\n        }\n\n        get value() {\n            return this._numericInput.value;\n        }\n\n        set value(value) {\n            this._numericInput.value = value;\n            if (this._numericInput.class.contains(pcui.CLASS_MULTIPLE_VALUES)) {\n                this.class.add(pcui.CLASS_MULTIPLE_VALUES);\n            } else {\n                this.class.remove(pcui.CLASS_MULTIPLE_VALUES);\n            }\n        }\n\n        set values(values) {\n            this._numericInput.values = values;\n            if (this._numericInput.class.contains(pcui.CLASS_MULTIPLE_VALUES)) {\n                this.class.add(pcui.CLASS_MULTIPLE_VALUES);\n            } else {\n                this.class.remove(pcui.CLASS_MULTIPLE_VALUES);\n            }\n        }\n    }\n\n    export { SliderInput };\n    export default SliderInput;\n\n//     utils.proxy(SliderInput, '_numericInput', PROXY_FIELDS);\n//     utils.implements(SliderInput, pcui.IBindable);\n//     utils.implements(SliderInput, pcui.IFocusable);\n\n//     pcui.Element.register('slider', SliderInput, { renderChanges: true });\n\n//     return {\n//         SliderInput: SliderInput\n//     };\n// })());\n","// Object.assign(pcui, (function () {\n//     'use strict';\n\n    import * as pcui from '../pcui';\n    import Container from './element-container';\n    import Label from './element-label';\n    import Button from './element-button';\n\n    const CLASS_PANEL = 'pcui-panel';\n    const CLASS_PANEL_HEADER = CLASS_PANEL + '-header';\n    const CLASS_PANEL_HEADER_TITLE = CLASS_PANEL_HEADER + '-title';\n    const CLASS_PANEL_CONTENT = CLASS_PANEL + '-content';\n    const CLASS_PANEL_HORIZONTAL = CLASS_PANEL + '-horizontal';\n    const CLASS_PANEL_SORTABLE_ICON = CLASS_PANEL + '-sortable-icon';\n    const CLASS_PANEL_REMOVE = CLASS_PANEL + '-remove';\n\n    // TODO: document panelType\n\n    /**\n     * @event\n     * @name pcui.Panel#collapse\n     * @description Fired when the panel gets collapsed\n     */\n\n    /**\n     * @event\n     * @name pcui.Panel#expand\n     * @description Fired when the panel gets expanded\n     */\n\n    /**\n     * @name pcui.Panel\n     * @classdesc The Panel is a pcui.Container that itself contains a header container and a content container. The\n     * respective pcui.Container functions work using the content container. One can also append elements to the header of the Panel.\n     * @property {Boolean} flex Gets / sets whether the container supports flex layout. Defaults to false. Cannot co-exist with grid.\n     * @property {Boolean} grid Gets / sets whether the container supports grid layout. Defaults to false. Cannot co-exist with flex.\n     * @property {Boolean} collapsible Gets / sets whether the panel can be collapsed by clicking on its header or by setting collapsed to true. Defaults to false.\n     * @property {Boolean} sortable Gets / sets whether the panel can be reordered\n     * @property {Boolean} collapsed Gets / sets whether the panel is collapsed or expanded. Defaults to false.\n     * @property {Boolean} collapseHorizontally Gets / sets whether the panel collapses horizontally - this would be the case for side panels. Defaults to false.\n     * @property {Boolean} removable Gets / sets whether the panel can be removed\n     * @property {Number} headerSize The height of the header in pixels. Defaults to 32.\n     * @property {String} headerText The header text of the panel. Defaults to the empty string.\n     * @property {pcui.Container} header Gets the header conttainer.\n     * @property {pcui.Container} content Gets the content conttainer.\n     * @extends pcui.Container\n     * @mixes pcui.IContainer\n     * @mixes pcui.IFlex\n     * @mixes pcui.IGrid\n     * @mixes pcui.IScrollable\n     * @mixes pcui.IResizable\n     */\n    class Panel extends Container {\n        /**\n         * Creates a new Panel.\n         * @param {Object} args The arguments. Extends the pcui.Container constructor arguments. All settable properties can also be set through the constructor.\n         */\n        constructor(args) {\n            if (!args) args = {};\n\n            const panelArgs = Object.assign({}, args);\n            panelArgs.flex = true;\n            delete panelArgs.grid;\n            delete panelArgs.flexDirection;\n            delete panelArgs.scrollable;\n\n            super(panelArgs);\n\n            this.class.add(CLASS_PANEL);\n\n            if (args.panelType) {\n                this.class.add(CLASS_PANEL + '-' + args.panelType);\n            }\n\n            // do not call reflow on every update while\n            // we are initializing\n            this._suspendReflow = true;\n\n            // initialize header container\n            this._initializeHeader(args);\n\n            // initialize content container\n            this._initializeContent(args);\n\n            // header size\n            this.headerSize = args.headerSize !== undefined ? args.headerSize : 32;\n\n            this._domEvtDragStart = this._onDragStart.bind(this);\n            this._domEvtDragMove = this._onDragMove.bind(this);\n            this._domEvtDragEnd = this._onDragEnd.bind(this);\n\n            // collapse related\n            this._reflowTimeout = null;\n            this._widthBeforeCollapse = null;\n            this._heightBeforeCollapse = null;\n\n            this.collapsible = args.collapsible || false;\n            this.collapsed = args.collapsed || false;\n            this.collapseHorizontally = args.collapseHorizontally || false;\n\n            this._iconSort = null;\n            this.sortable = args.sortable || false;\n\n            this._btnRemove = null;\n            this.removable = args.removable || false;\n\n            // set the contents container to be the content DOM element\n            // from now on calling append functions on the panel will append themn\n            // elements to the contents container\n            this.domContent = this._containerContent.dom;\n\n            // execute reflow now after all fields have been initialized\n            this._suspendReflow = false;\n            this._reflow();\n        }\n\n        _initializeHeader(args) {\n            // header container\n            this._containerHeader = new Container({\n                flex: true,\n                flexDirection: 'row',\n                class: CLASS_PANEL_HEADER\n            });\n\n            // header title\n            this._labelTitle = new Label({\n                text: args.headerText,\n                class: CLASS_PANEL_HEADER_TITLE\n            });\n            this._containerHeader.append(this._labelTitle);\n\n            // use native click listener because the pcui.Element#click event is only fired\n            // if the element is enabled. However we still want to catch header click events in order\n            // to collapse them\n            this._containerHeader.dom.addEventListener('click', this._onHeaderClick.bind(this));\n\n            this.append(this._containerHeader);\n        }\n\n        _onHeaderClick(evt) {\n            if (!this._collapsible) return;\n            if (evt.target !== this.header.dom && evt.target !== this._labelTitle.dom) return;\n\n            // toggle collapsed\n            this.collapsed = !this.collapsed;\n        }\n\n        _onClickRemove(evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n\n            this.emit('click:remove');\n        }\n\n        _initializeContent(args) {\n            // containers container\n            this._containerContent = new Container({\n                class: CLASS_PANEL_CONTENT,\n                grid: args.grid,\n                flex: args.flex,\n                flexDirection: args.flexDirection,\n                scrollable: args.scrollable\n            });\n\n            this.append(this._containerContent);\n        }\n\n        // Collapses or expands the panel as needed\n        _reflow() {\n            if (this._suspendReflow) {\n                return;\n            }\n\n            if (this._reflowTimeout) {\n                cancelAnimationFrame(this._reflowTimeout);\n                this._reflowTimeout = null;\n            }\n\n            if (this.hidden || !this.collapsible) return;\n\n            if (this.collapsed && this.collapseHorizontally) {\n                this._containerHeader.style.top = -this.headerSize + 'px';\n            } else {\n                this._containerHeader.style.top = '';\n            }\n\n            // we rely on the content width / height and we have to\n            // wait for 1 frame before we can get the final values back\n            this._reflowTimeout = requestAnimationFrame(() => {\n                this._reflowTimeout = null;\n\n                if (this.collapsed) {\n                    // remember size before collapse\n                    if (!this._widthBeforeCollapse) {\n                        this._widthBeforeCollapse = this.style.width;\n                    }\n                    if (!this._heightBeforeCollapse) {\n                        this._heightBeforeCollapse = this.style.height;\n                    }\n\n                    if (this._collapseHorizontally) {\n                        this.height = '';\n                        this.width = this.headerSize;\n                    } else {\n                        this.height = this.headerSize;\n                    }\n\n                    // add collapsed class after getting the width and height\n                    // because if we add it before then because of overflow:hidden\n                    // we might get innacurate width/heights.\n                    this.class.add(pcui.CLASS_COLLAPSED);\n                } else {\n                    // remove collapsed class first and the restore width and height\n                    // (opposite order of collapsing)\n                    this.class.remove(pcui.CLASS_COLLAPSED);\n\n                    if (this._collapseHorizontally) {\n                        this.height = '';\n                        if (this._widthBeforeCollapse !== null) {\n                            this.width = this._widthBeforeCollapse;\n                        }\n                    } else {\n                        if (this._heightBeforeCollapse !== null) {\n                            this.height = this._heightBeforeCollapse;\n                        }\n                    }\n\n                    // reset before collapse vars\n                    this._widthBeforeCollapse = null;\n                    this._heightBeforeCollapse = null;\n                }\n            });\n        }\n\n        _onDragStart(evt) {\n            if (this.disabled || this.readOnly) return;\n\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            window.addEventListener('mouseup', this._domEvtDragEnd);\n            window.addEventListener('mouseleave', this._domEvtDragEnd);\n            window.addEventListener('mousemove', this._domEvtDragMove);\n\n            this.emit('dragstart');\n            if (this.parent && this.parent._onChildDragStart) {\n                this.parent._onChildDragStart(evt, this);\n            }\n        }\n\n        _onDragMove(evt) {\n            this.emit('dragmove');\n            if (this.parent && this.parent._onChildDragStart) {\n                this.parent._onChildDragMove(evt, this);\n            }\n        }\n\n        _onDragEnd(evt) {\n            window.removeEventListener('mouseup', this._domEvtDragEnd);\n            window.removeEventListener('mouseleave', this._domEvtDragEnd);\n            window.removeEventListener('mousemove', this._domEvtDragMove);\n\n            if (this._draggedChild === this) {\n                this._draggedChild = null;\n            }\n\n            this.emit('dragend');\n            if (this.parent && this.parent._onChildDragStart) {\n                this.parent._onChildDragEnd(evt, this);\n            }\n        }\n\n\n\n        destroy() {\n            if (this._destroyed) return;\n            if (this._reflowTimeout) {\n                cancelAnimationFrame(this._reflowTimeout);\n                this._reflowTimeout = null;\n            }\n\n            window.removeEventListener('mouseup', this._domEvtDragEnd);\n            window.removeEventListener('mouseleave', this._domEvtDragEnd);\n            window.removeEventListener('mousemove', this._domEvtDragMove);\n\n            super.destroy();\n        }\n\n        get collapsible() {\n            return this._collapsible;\n        }\n\n        set collapsible(value) {\n            if (value === this._collapsible) return;\n\n            this._collapsible = value;\n\n            if (value) {\n                this.classAdd(pcui.CLASS_COLLAPSIBLE);\n            } else {\n                this.classRemove(pcui.CLASS_COLLAPSIBLE);\n            }\n\n            this._reflow();\n\n            if (this.collapsed) {\n                this.emit(value ? 'collapse' : 'expand');\n            }\n\n        }\n\n        get collapsed() {\n            return this._collapsed;\n        }\n\n        set collapsed(value) {\n            if (this._collapsed === value) return;\n\n            this._collapsed = value;\n\n            this._reflow();\n\n            if (this.collapsible) {\n                this.emit(value ? 'collapse' : 'expand');\n            }\n        }\n\n        get sortable() {\n            return this._sortable;\n        }\n\n        set sortable(value) {\n            if (this._sortable === value) return;\n\n            this._sortable = value;\n\n            if (value) {\n                this._iconSort = new Label({\n                    class: CLASS_PANEL_SORTABLE_ICON\n                });\n\n                this._iconSort.dom.addEventListener('mousedown', this._domEvtDragStart);\n\n                this.header.prepend(this._iconSort);\n            } else if (this._iconSort) {\n                this._iconSort.destroy();\n                this._iconSort = null;\n            }\n        }\n\n        get removable() {\n            return !!this._btnRemove;\n        }\n\n        set removable(value) {\n            if (this.removable === value) return;\n\n            if (value) {\n                this._btnRemove = new Button({\n                    icon: 'E289',\n                    class: CLASS_PANEL_REMOVE\n                });\n                this._btnRemove.on('click', this._onClickRemove.bind(this));\n                this.header.append(this._btnRemove);\n            } else {\n                this._btnRemove.destroy();\n                this._btnRemove = null;\n            }\n        }\n\n        get collapseHorizontally() {\n            return this._collapseHorizontally;\n        }\n\n        set collapseHorizontally(value) {\n            if (this._collapseHorizontally === value) return;\n\n            this._collapseHorizontally = value;\n            if (value) {\n                this.classAdd(CLASS_PANEL_HORIZONTAL);\n            } else {\n                this.classRemove(CLASS_PANEL_HORIZONTAL);\n            }\n\n            this._reflow();\n        }\n\n        get content() {\n            return this._containerContent;\n        }\n\n        get header() {\n            return this._containerHeader;\n        }\n\n        get headerText() {\n            return this._labelTitle.text;\n        }\n\n        set headerText(value) {\n            this._labelTitle.text = value;\n        }\n\n        get headerSize() {\n            return this._headerSize;\n        }\n\n        set headerSize(value) {\n            this._headerSize = value;\n            const style = this._containerHeader.dom.style;\n            style.height = Math.max(0, value) + 'px';\n            style.lineHeight = style.height;\n            this._reflow();\n        }\n    }\n\n    export { Panel };\n    export default Panel;\n\n//     utils.implements(Panel, pcui.ICollapsible);\n\n//     pcui.Element.register('panel', Panel);\n\n//     return {\n//         Panel: Panel\n//     };\n// })());\n"],"sourceRoot":""}